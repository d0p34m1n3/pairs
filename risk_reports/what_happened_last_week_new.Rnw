%
% what happened last week
%
\documentclass{article}

\usepackage[portrait, headheight = 0cm, margin=0.25cm, top = 0.25cm, nofoot]{geometry} 
\usepackage[export]{adjustbox} 
\usepackage{graphicx}
\usepackage[space]{grffile}
\usepackage[dvipsnames,table]{xcolor} % [dvipsnames,table] for setting colors \usepackage{amsmath} \usepackage{xfrac}
\usepackage{tikz}
\usetikzlibrary{shapes.geometric}
\usetikzlibrary{shapes.misc}
\usetikzlibrary{arrows}
\usepackage{xfrac}

\DeclareRobustCommand\Tstrut{\rule{0pt}{2.6ex}}         % = `top' strut
\DeclareRobustCommand\Bstrut{\rule[-0.9ex]{0pt}{0pt}}   % = `bottom' strut
\renewcommand{\familydefault}{\sfdefault}

\begin{document}
<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
# required packages
require(Hmisc)
require(digest)
require(stringi)
require(readxl)
require(scales)
require(data.table)
require(Matrix)
require(Matrix.utils)
require(clue)
require(magrittr)
require(gsubfn)
require(FRAPO)

off_site<-if(Sys.info()["sysname"]=="Windows"){FALSE}else{TRUE}

source("https://raw.githubusercontent.com/satrapade/utility/master/utility_functions.R")
source("https://raw.githubusercontent.com/satrapade/latex_utils/master/latex_helpers_v2.R")

config<-new.env()
source(
  file="https://raw.githubusercontent.com/satrapade/pairs/master/configuration/workflow_config.R",
  local=config
)
source("https://raw.githubusercontent.com/satrapade/pairs/master/utility/append2log.R")
source("https://raw.githubusercontent.com/satrapade/pairs/master/utility/log_code.R")
source("https://raw.githubusercontent.com/satrapade/pairs/master/utility/nn_cast.R")

if(!exists("append2log"))knitr::knit_exit() 
if(!exists("log_code"))knitr::knit_exit() 

x<-list.files(
  path="N:/Depts/Share/UK Alpha Team/Analytics/risk_reports/figure",
  pattern="*.pdf",
  full.names=TRUE
)
if(length(x)>0)file.remove(x)

@


<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=

table2matrix<- . %>% 
  paste0(collapse="\n") %>% 
  fread %>%
  {m<-as.matrix(.[,-1]); rownames(m)<-.[[1]]; m }

@


<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
#
# daily data
#

# look-through super sector exposures
duke_lt <- (if(off_site){
  "https://raw.githubusercontent.com/satrapade/pairs/master/data/duke_pair_look_vs_outright.csv"
} else {
  "N:/Depts/Share/UK Alpha Team/Analytics/duke_summary/duke_pair_look_vs_outright.csv"
}) %>% readLines %>% paste0(collapse="\n") %>% fread

# local returns of relevant factors
factor_local_tret<-(if(off_site){
  "https://raw.githubusercontent.com/satrapade/pairs/master/data/factor_local_tret.csv"
} else {
  "N:/Depts/Share/UK Alpha Team/Analytics/market_data/factor_local_tret.csv"
}) %>% readLines %>% table2matrix

# pair exposures in basis points
pair_exposure<-(if(off_site){
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/duke_pair_exposure.csv"
  } else {
    "N:/Depts/Share/UK Alpha Team/Analytics/duke_summary/duke_pair_exposure.csv"
  }) %>% readLines %>% table2matrix

# pair pnl 
pair_local_pnl<-(if(off_site){
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/duke_pair_local_pnl.csv"
  } else {
    "N:/Depts/Share/UK Alpha Team/Analytics/duke_summary/duke_pair_local_pnl.csv"
  }) %>% readLines %>% table2matrix

# pair long leg pnl
pair_long_pnl<-(if(off_site){
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/duke_pair_long_pnl.csv"
  } else {
    "N:/Depts/Share/UK Alpha Team/Analytics/duke_summary/duke_pair_long_pnl.csv"
  }) %>% readLines %>% table2matrix

# pair short leg pnl
pair_short_pnl<-(if(off_site){
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/duke_pair_short_pnl.csv"
  } else {
    "N:/Depts/Share/UK Alpha Team/Analytics/duke_summary/duke_pair_short_pnl.csv"
  }) %>% readLines %>% table2matrix

manager_exposure<-(if(off_site){
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/duke_manager_exposure.csv"
  } else {
    "N:/Depts/Share/UK Alpha Team/Analytics/duke_summary/duke_manager_exposure.csv"
  }) %>%readLines %>% table2matrix

manager_local_pnl<-(if(off_site){
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/duke_manager_local_pnl.csv"
  } else {
    "N:/Depts/Share/UK Alpha Team/Analytics/duke_summary/duke_manager_local_pnl.csv"
  }) %>% readLines %>% table2matrix

drop_one_manager_pnl<-(if(off_site){
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/duke_drop_one_manager_pnl.csv"
  } else {
    "N:/Depts/Share/UK Alpha Team/Analytics/duke_summary/duke_drop_one_manager_pnl.csv"
  }) %>% readLines %>% table2matrix

exposure<-(if(off_site){
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/duke_exposure.csv"
  } else {
    "N:/Depts/Share/UK Alpha Team/Analytics/duke_summary/duke_exposure.csv"
  }) %>% readLines %>% table2matrix

long_exposure<-(if(off_site){
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/duke_long_exposure.csv"
  } else {
    "N:/Depts/Share/UK Alpha Team/Analytics/duke_summary/duke_long_exposure.csv"
  }) %>% readLines %>% table2matrix

short_exposure<-(if(off_site){
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/duke_short_exposure.csv"
  } else {
    "N:/Depts/Share/UK Alpha Team/Analytics/duke_summary/duke_short_exposure.csv"
  }) %>% readLines %>% table2matrix

local_pnl<-(if(off_site){
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/duke_local_pnl.csv"
  } else {
    "N:/Depts/Share/UK Alpha Team/Analytics/duke_summary/duke_local_pnl.csv"
  }) %>% readLines %>% table2matrix

@


<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
#
# intraday data
#

# raw intraday data
intraday<-if(off_site){ 
  "https://raw.githubusercontent.com/satrapade/pairs/master/data/compressed_intraday.txt" %>%
  scan(character()) %>%
  decompress
} else {
  "N:/Depts/Share/UK Alpha Team/Analytics/market_data/intraday.csv" %>%
  readLines %>% 
  paste0(collapse="\n") %>% 
  fread
}

# bar properties
bar_intervals<-(if(off_site){ 
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/bar_intervals.csv"
} else {
    "N:/Depts/Share/UK Alpha Team/Analytics/market_data/bar_intervals.csv"
}) %>% readLines %>% paste0(collapse="\n") %>% fread


# 10min bar performance
intraday_perf<-if(off_site){
  "https://raw.githubusercontent.com/satrapade/pairs/master/data/compressed_intraday_perf.txt"%>%
  scan(character()) %>%
  decompress %>% 
  as.matrix
}else{
  "N:/Depts/Share/UK Alpha Team/Analytics/market_data/intraday_perf.csv" %>%
  paste0(collapse="\n") %>% 
  fread %>% 
  as.matrix
}

# intraday pair 10min returns
intraday_pair<-if(off_site){
  "https://raw.githubusercontent.com/satrapade/pairs/master/data/compressed_intraday_pair.txt"%>%
  scan(character()) %>%
  decompress %>% 
  as.matrix
}else{
  "N:/Depts/Share/UK Alpha Team/Analytics/market_data/intraday_pair.csv" %>%
  paste0(collapse="\n") %>% 
  fread %>% 
  as.matrix
}

# intraday pair long 10min returns
intraday_pair_longs<-if(off_site){
  "https://raw.githubusercontent.com/satrapade/pairs/master/data/compressed_intraday_pair_longs.txt"%>%
  scan(character()) %>%
  decompress %>% 
  as.matrix
}else{
  "N:/Depts/Share/UK Alpha Team/Analytics/market_data/intraday_pair_longs.csv" %>%
  paste0(collapse="\n") %>% 
  fread %>% 
  as.matrix
}

# intraday pair short 10min returns
intraday_pair_shorts<-if(off_site){
  "https://raw.githubusercontent.com/satrapade/pairs/master/data/compressed_intraday_pair_shorts.txt"%>%
  scan(character()) %>%
  decompress %>% 
  as.matrix
}else{
  "N:/Depts/Share/UK Alpha Team/Analytics/market_data/intraday_pair_shorts.csv" %>%
  paste0(collapse="\n") %>% 
  fread %>% 
  as.matrix
}

@

<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
#######################################################################################
#
# pair properties used to form subsets
#
pair_mrc<--sort(setNames(-mrc(rep(1,ncol(pair_local_pnl)),cov(pair_local_pnl)),colnames(pair_local_pnl)))


@

<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
#######################################################################################
#
# pair subsets
#
#######################################################################################


#######################################################################################
#
# risk contribution percentage subsets
#
all_contributions<-list( 
  DUKE50=which(cumsum(pair_mrc)<=50),
  DUKE75=which(cumsum(pair_mrc)<=75),
  DUKE90=which(cumsum(pair_mrc)<=90),
  DUKE10=which(cumsum(pair_mrc)>90),
  ALL=seq_along(pair_mrc)
) %>%
{mapply(function(n)paste(paste0("(",names(pair_mrc)[n],")"),collapse="|"),.)} 

#######################################################################################
#
# single manager subsets
#
all_managers<-colnames(pair_local_pnl) %>% # manager subsets
  { gsub("[0-9]+$","",.) } %>%
  unique %>%
  sort %>%
  {setNames(paste0("^",.),.)} 

#######################################################################################
#
# exposed to sector subsets
#
all_sectors<-duke_lt[abs(Outright)>0,.( # sector subsets
  gross=sum(abs(Outright))
),keyby=list(
  pair=Pair,
  sector=gsub(" Index","",SuperSectorIndex)%>%{ifelse(.=="","NONE",.)}
)] %>%
 {mapply(
   function(the_sector).[sector==the_sector,sort(unique(pair))],
   the_sector=gsub(" Index","",sort(unique(.$sector))),
   SIMPLIFY=FALSE
 )} %>%
 {mapply(function(n)paste(paste0("(",n,")"),collapse="|"),.)} 
@


<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
#######################################################################################
#
# convert a sector subset to a matrix
#

pair2subset<-function(all_subsets,pair_names){
  res<-mapply(
    function(s,n){
      is_member<-grepl(s,pair_names)
      membership_tag<-ifelse(is_member,n,"")
      setNames(membership_tag,names(pair_names))
    },
    s=all_subsets,
    n=names(all_subsets)
  )
  apply(res,1,function(r)paste(r[nchar(r)>0],collapse="|"))
}


@

<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
#######################################################################################
#
# the key table 
#

WHLW<-bar_intervals[day>0,.(
  pair=colnames(intraday_pair),
  date=unique(date),
  intraday_pnl=colSums(intraday_pair[which(bar_intervals[["day"]]==day),])*10000,
  intraday_pnl_long=colSums(intraday_pair_longs[which(bar_intervals[["day"]]==day),])*10000,
  intraday_pnl_short=colSums(intraday_pair_shorts[which(bar_intervals[["day"]]==day),])*10000,
  pnl=pair_local_pnl[unique(date),colnames(intraday_pair)]*10000,
  pnl_long=pair_long_pnl[unique(date),colnames(intraday_pair)]*10000,
  pnl_short=(-1)*pair_short_pnl[unique(date),colnames(intraday_pair)]*10000
),keyby=day] %>%
  {data.table(.,manager_subsets=pair2subset(all_managers,.$pair))} %>%
  {data.table(.,contribution_subsets=pair2subset(all_contributions,.$pair))} %>%
  {data.table(.,sector_subsets=pair2subset(all_sectors,.$pair))}
 

#
# WHLW aggregation
#
group_WHLW_by_subset<-function(
  subset_name="contribution_subsets",
  field_name="pnl"
){
  w1<-WHLW[TRUE,list(
   subset=strsplit(get(subset_name),"|",fixed=TRUE)[[1]],
   value=get(field_name)
  ),keyby=c(subset_name,"pair","date")]
  w2<-w1[TRUE,.(pair,date,subset,value)]
  x2<-NNcast(
    data=w2,
    i_name="subset",
    j_name="date",
    v_name="value"
  ) %>% 
    {data.table(subset=rownames(.),round(.,digits=0),period=round(rowSums(.),digits=0))}
  for(i in 2:ncol(x2))x2[[i]]<-structure(x2[[i]],format=quote(n_fmt(this)))
  x2
}

@

<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=

plot_subset_pnl<-function(
  pm=c(ALL="*"),
  intraday_pair=get("intraday_pair",envir=.GlobalEnv),
  bar_intervals=get("bar_intervals",envir=.GlobalEnv),
  now=max(intraday$times),
  ndx=grepl(paste0("^",pm),colnames(intraday_pair)),
  bars=which(bar_intervals$day>0),
  ylab="P&L (bps)",
  do_plot=TRUE
){
  pnl<-10000*rowSums(intraday_pair[bars,ndx,drop=FALSE])
  cumpnl<-cumsum(pnl)
  if(!do_plot)return(structure(pnl,.Names=attributes(intraday_pair)$datetime))
  plot(
    0,
    type="n",
    xlim=c(1,length(pnl)),
    ylim=c(min(cumpnl),max(cumpnl)),
    axes=FALSE,
    main=paste(names(pm),":",round(sum(pnl),digits=0)),
    ylab=ylab,
    xlab=paste("period ending",now)
  )
  lines(cumpnl,lwd=3,col=rgb(0,0,1,0.33))
  day_edge<-which(abs(diff(bar_intervals$day[bars]))>0)+1
  if(length(day_edge)>0)abline(v=day_edge,col=rgb(1,0,0,0.25))
  day_name<-stri_sub(weekdays(as.Date(bar_intervals$date[bars])),1,3)
  if(length(day_edge)>0){
    day_loc<-day_edge-c(day_edge[1]/2,diff(day_edge)/2)
    axis(1,at=day_loc,labels=day_name[day_loc])
  }else{
    axis(1,at=length(bars)/2,labels = day_name[1])
  }
  axis(2)
}


@

<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
plot_intraday_pnl<-function(
  pm="*",
  intraday_pair=get("intraday_pair",envir=.GlobalEnv),
  bar_intervals=get("bar_intervals",envir=.GlobalEnv),
  now=max(intraday$times),
  ndx=grepl(paste0("^",pm),colnames(intraday_pair)),
  bars=which(bar_intervals$day>0),
  ylab="P&L (bps)",
  do_plot=TRUE
){
  pnl<-10000*rowSums(intraday_pair[bars,ndx,drop=FALSE])
  cumpnl<-cumsum(pnl)
  if(!do_plot)return(structure(pnl,.Names=attributes(intraday_pair)$datetime))
  plot(
    0,
    type="n",
    xlim=c(1,length(pnl)),
    ylim=c(min(cumpnl),max(cumpnl)),
    axes=FALSE,
    main=paste(pm,":",round(sum(pnl),digits=0)),
    ylab=ylab,
    xlab=paste("period ending",now)
  )
  lines(cumpnl,lwd=3,col=rgb(0,0,1,0.33))
  day_edge<-which(abs(diff(bar_intervals$day[bars]))>0)+1
  if(length(day_edge)>0)abline(v=day_edge,col=rgb(1,0,0,0.25))
  day_name<-stri_sub(weekdays(as.Date(bar_intervals$date[bars])),1,3)
  if(length(day_edge)>0){
    day_loc<-day_edge-c(day_edge[1]/2,diff(day_edge)/2)
    axis(1,at=day_loc,labels=day_name[day_loc])
  }else{
    axis(1,at=length(bars)/2,labels = day_name[1])
  }
  axis(2)
}


@


<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=

#determine pairs, managers and pair-to-manager mapping
pairs<-sort(unique(colnames(pair_exposure)))
managers<-sort(unique(colnames(manager_exposure)))
manager_pairs<-structure(
  diag(length(managers))[match(gsub("[0-9]+","",pairs),managers),],
  dimnames=list(pairs,managers)
)

mc<-function(x,p="*",rows=1:nrow(x),cols=which(grepl(p,colnames(x))))x[rows,cols,drop=FALSE]
the_pairs<-c("*",colnames(manager_exposure))
days_in_data<-sort(unique(bar_intervals$date[bar_intervals$day>0]))

summary_table<-data.table(
  pair=the_pairs,
  all=structure(
    format=quote(n_fmt(round(this,digits=1))),
    mapply(function(p){
      pnls<-10000*colSums(mc(intraday_pair,paste0("^",p)))
      sum(pnls)
    },p=the_pairs)
  ),
  longs=structure(
    format=quote(n_fmt(round(this,digits=1))),
    mapply(function(p){
      pnls<-10000*colSums(mc(intraday_pair_longs,paste0("^",p)))
      sum(pnls)
    },p=the_pairs)
  ),
  shorts=structure(
    format=quote(n_fmt(round(this,digits=1))),
    mapply(function(p){
      pnls<-10000*colSums(mc(intraday_pair_shorts,paste0("^",p)))
      sum(pnls)
    },p=the_pairs)
  ),
  do.call(data.table,mapply(function(i)structure(
    format=quote(n_fmt(round(this,digits=1))),
    hdr=bquote(stri_sub(.(i),6,-1)),
    mapply(function(p){
      the_day<-i
      ndx<-bar_intervals$date==the_day
      pnls<-10000*colSums(mc(intraday_pair,paste0("^",p))[ndx,,drop=FALSE])
      sum(pnls)
    },p=the_pairs)
  ),days_in_data,SIMPLIFY=FALSE))
)


backtest_hit_ratio_table<-data.table(
  pair=the_pairs,
  do.call(data.table,mapply(function(i)structure(
    format=quote(n_fmt(round(this,digits=0))),
    hdr=bquote(tbl(c("H",stri_sub(.(i),6,-1)),align="@{}c@{}")),
    mapply(function(p){
      the_day<-i
      if(is.na(the_day))return(0)
      ndx<-bar_intervals$date==the_day
      pnls<-10000*colSums(mc(intraday_pair,paste0("^",p))[ndx,,drop=FALSE])
      round(100*sum(pnls>0)/length(pnls),digits=1)
    },p=the_pairs)
  ),days_in_data,SIMPLIFY=FALSE))
)

backtest_winloss_ratio_table<-data.table(
  pair=the_pairs,
  do.call(data.table,mapply(function(i)structure(
    format=quote(n_fmt(round(this,digits=1))),
    hdr=bquote(
      tbl(
        c("WL",stri_sub(.(i),6,-1)),
        align="@{}c@{}"
      )
    ),
    mapply(function(p){
      the_day<-i
      if(is.na(the_day))return(0)
      ndx<-bar_intervals$date==the_day
      if(sum(ndx)<1)return(0)
      pnls<-10000*colSums(mc(intraday_pair,paste0("^",p))[ndx,,drop=FALSE])
      winners<-if(sum(pnls>0)>0){sum(pnls[pnls>0])}else{0}
      losers<-if(sum(pnls<0)>0){sum(-pnls[pnls<0])}else{0}
      if(losers>0){winners/losers}else{0}
    },p=the_pairs)
  ),days_in_data,SIMPLIFY=FALSE))
)

backtest_plot_table<-data.table(
  pm=structure(hdr="{\\bf PM}",paste0("{\\bf ",the_pairs,"}")),
  do.call(data.table,mapply(function(i)structure(
    hdr=tbl(
        c(
          stri_sub(weekdays(as.Date(i)),1,3),
          stri_sub(i,6,-1)
        ),
        align="@{}c@{}"
    ),
    mapply(function(p){
      the_day<-i
      if(is.na(the_day))return(0)
      ndx<-bar_intervals$date==the_day & bar_intervals$day>0
      if(sum(ndx)<1){
        res<-make_plot(
          expression({
            plot(NA,type="n",xlab="",ylab="",xlim=c(0,1),ylim=c(0,1),axes=FALSE)
            text(0.5,0.5,labels="No data",cex=5)
          }),
          width="2cm",
          height="2cm",
          envir=environment()
        )
        return(res)
      }
      pnls<-cumsum(10000*rowSums(mc(intraday_pair,paste0("^",p))[ndx,,drop=FALSE]))
      all_pnls<-cumsum(10000*rowSums(mc(intraday_pair,paste0("^",p))))
      day_pnl<-round(tail(pnls,1),digits=1)
      ylim<-c(min(pnls),max(pnls))
      make_plot(
        expression({
          par(mai=c(0,0,0,0))
          plot(pnls,type="l",xlab="",ylab="",axes=FALSE,lwd=30,col=rgb(0,0,1,0.33),ylim=ylim)
          abline(h=0,col="red")
          text(
            x=length(pnls)/2,
            y=mean(ylim),
            labels=ifelse(day_pnl>0,paste0("+",day_pnl),paste0("-",abs(day_pnl))),
            col=ifelse(day_pnl>0,rgb(0,0.5,0),rgb(0.5,0,0)),
            font=2,
            cex=10
          )
        }),
        width="2cm",
        height="2cm",
        envir=environment()
      )
    },p=the_pairs)
  ),days_in_data,SIMPLIFY=FALSE))
)


@

\section{Contents}

\vskip 5mm

\noindent This report contains an analysis of recent performance of the {\bf current} portfolio.
Historical P\&L numbers in this report do not reflect actual portfolio performance, 
because historical changes of portfolio composition are not included in the analysis. 

\vskip 5mm

\noindent The purpose of this analysis is to help future positioning, not to evaluate 
past decisions. This is more like a {\bf backtest} rather than a performance 
attribution.

\vskip 5mm

\noindent Current position information is obtained by scraping the latest portfolio 
sheet.

\vskip 5mm
<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
if(!off_site){
  db_sheets<-dbConnect(
    SQLite(), 
    dbname="N:/Depts/Share/UK Alpha Team/Analytics/sheet_scrape/sheet_scrapes.sqlite"
  )
  
  db<-dbConnect(
    odbc::odbc(), 
    .connection_string = paste0(
      "driver={SQL Server};",
      "server=SQLS071FP\\QST;",
      "database=PRDQSTFundPerformance;",
      "trusted_connection=true"
    )
  )
  
  db_sheet_latex<-ntable(
    df=apply(as.data.table(
      t(query("SELECT date, fname FROM sheet_scrape ORDER BY DATE DESC LIMIT 1",db_sheets)),
      keep.rownames=TRUE
    ),2,latexTranslate)
  )
  
  db_update_latex<-ntable(
    df=apply(as.data.table(
      t(query("
          select Top 1        
          bs.backup_finish_date                    as PRDFundPerformance_BackupDateTime,
          rs.restore_date                          as PRDQSTFundPerformance_RestoreDateTime
          from msdb..restorehistory rs
          inner join msdb..backupset bs 
          on rs.backup_set_id = bs.backup_set_id
          where destination_database_name = 'PRDQSTFundPerformance'
          order by rs.restore_date desc
    ",db)),
    keep.rownames=TRUE
    ),2,latexTranslate)
  )
  
  latest_date_latex<-query("
      SELECT MAX(HistoricalDate) 
      FROM tHistoricalBucketHolding 
      WHERE tHistoricalBucketHolding.ProductId = 7 
      AND   tHistoricalBucketHolding.DataSourceId = 1"
  )[[1]][1]
  
} else {
  db_sheet_latex<-db_update_latex<-latest_date_latex<-""
}

@

\begin{center}
\Sexpr{db_sheet_latex}
\end{center}


\vskip 5mm

The performance DB used for calculations is as follows:

\vskip 5mm


\begin{center}
\Sexpr{db_update_latex}
\end{center}

\vskip 5mm


Trades are manually assigned to buckets by the performance team. It is possible that
position bucketing will lag product positions. We would expect the latest bucket date 
to occur in the near past (couple of days). Latest bucket day in LUKE: 
{\bf \Sexpr{latest_date_latex}}

<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=

subset_perf_table<-rbind(
  group_WHLW_by_subset("manager_subsets","pnl"),
  group_WHLW_by_subset("contribution_subsets","pnl")
)

@
\newpage 
\section{Summary: Recent performance of \underline{current} portfolio holdings}

\vskip 5mm

\begin{center}
\Sexpr{ntable(
  df=rbind(
    group_WHLW_by_subset("manager_subsets","pnl"),
    group_WHLW_by_subset("contribution_subsets","pnl")
  ),
  scale="0.75",
  title="pair subset daily pnl"
)}
\end{center}

\vskip 5mm 

\begin{center}
\Sexpr{ntable(
  df=rbind(
    group_WHLW_by_subset("manager_subsets","pnl_long"),
    group_WHLW_by_subset("contribution_subsets","pnl_long")
  ),
  scale="0.75",
  title="pair subset daily long pnl"
)}
\end{center}

\vskip 5mm 

\begin{center}
\Sexpr{ntable(
  df=rbind(
    group_WHLW_by_subset("manager_subsets","pnl_short"),
    group_WHLW_by_subset("contribution_subsets","pnl_short")
  ),
  scale="0.75",
  title="pair subset daily short pnl"
)}
\end{center}


\vskip 5mm

\newpage 
\section{Summary: Recent performance of \underline{current} portfolio holdings}

\vskip 5mm

\begin{center}
\Sexpr{ntable(
  summary_table,
  add_rownames=FALSE,
  title=paste("14 day intra-day backtest summary, up to", max(attributes(intraday_perf)$datetime)),
  scale=0.75
)}
\end{center}

\vskip 5mm

<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
a1<-c("m{1cm}",rep("@{}|@{}m{2cm}",ncol(backtest_plot_table)-1))
@
\begin{center}
\Sexpr{ntable(
  backtest_plot_table,
  add_rownames=FALSE,
  title="Intra-day performance by manager, total", 
  scale=0.75,
  alternating=FALSE,
  align=a1,
  halign="c",
  row_end="\\hline\\\\[-7mm]"
)}
\end{center}

\vskip 5mm


\begin{center}
\begin{tabular}{cc}
\Sexpr{ntable(
  backtest_hit_ratio_table,
  add_rownames=FALSE,
  title=paste(
    "14 day hit ratios, up to", 
    max(attributes(intraday_perf)$datetime)
  ),
  scale=0.6
)}
&
\Sexpr{ntable(
  backtest_winloss_ratio_table,
  add_rownames=FALSE,
  title=paste(
    "14 day win/loss ratios, up to", 
    max(attributes(intraday_perf)$datetime)
  ),
  scale=0.6
)}
\\
\end{tabular}
\end{center}

<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=

backtest_long_vs_short_px_table<-data.table(
  pm=structure(hdr="{\\bf PM}",paste0("{\\bf ",the_pairs,"}")),
  do.call(data.table,mapply(function(i)structure(
    hdr=tbl(
        c(
          stri_sub(weekdays(as.Date(i)),1,3),
          stri_sub(i,6,-1)
        ),
        align="@{}c@{}"
    ),
    mapply(function(p){
      the_day<-i
      if(is.na(the_day))return(0)
      ndx<-bar_intervals$date==the_day & bar_intervals$day>0
      if(sum(ndx)<1){
        res<-make_plot(expression({
          plot(NA,type="n",xlab="",ylab="",xlim=c(0,1),ylim=c(0,1),axes=FALSE)
          text(0.5,0.5,labels="No data",cex=5)
        }),width="2cm",height="2cm",envir=environment())
        return(res)
      }
      long_pnls<-cumsum(rowSums(mc(intraday_pair_longs,paste0("^",p))[ndx,,drop=FALSE]))
      short_pnls<-cumsum(rowSums(mc(intraday_pair_shorts,paste0("^",p))[ndx,,drop=FALSE]))
      final_long<-round(10000*tail(long_pnls,1),digits=0)
      final_long_text<-ifelse(sign(final_long)>0,paste0("+",final_long),final_long)
      final_short<-round(10000*tail(short_pnls,1),digits=0)
      final_short_text<-ifelse(sign(final_short)>0,paste0("+",final_short),final_short)
      ylim<-c(min(c(long_pnls,short_pnls)),max(c(long_pnls,short_pnls)))
      make_plot(expression({
        par(mai=c(0,0,0,0))
        plot(
          x=c(1,sum(ndx)),
          y=ylim,
          type="n",
          xlab="",
          ylab="",
          axes=FALSE
        )
        lines(
          x=seq_along(short_pnls),
          y=short_pnls,
          lwd=20,
          col=rgb(1,0,0,0.5)
        )
        lines(
          x=seq_along(long_pnls),
          y=long_pnls,          
          lwd=20,
          col=rgb(0,1,0,0.5)
        )
        text(
          x=sum(ndx)/2,
          y=mean(ylim),
          labels=paste0("L:",final_long_text,"\n","S:",final_short_text),
          col="black",
          font=2,
          cex=8
        )
      }),width="2cm",height="2cm",envir=environment())
    },p=the_pairs)
  ),days_in_data,SIMPLIFY=FALSE))
)

a1<-c("m{1cm}",rep("@{}|@{}m{2cm}",ncol(backtest_long_vs_short_px_table)-1))

@
\newpage
\section{Long vs short leg price performance}

\vskip 5mm

\noindent P\&L from long and short legs of manager positions should have opposite signs most of 
the time. In addition, magnitutes should be roughly the same. Patters of realized behaviour 
can be used to pinpoint positioning inefficiencies.

\vskip 10mm

\begin{center}
\Sexpr{ntable(
  backtest_long_vs_short_px_table,
  add_rownames=FALSE,
  title=paste0(
    "Long leg (",dot("green"),") vs short leg (",dot("red"),"),",
    "legend is long, short P\\&L  L:(long P\\&L), S:(short P\\&L), all in bps"
  ), 
  scale=0.75,
  alternating=FALSE,
  align=a1,
  halign="c",
  row_end="\\hline\\\\[-7mm]"
)}
\end{center}

<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=

backtest_long_vs_short_table<-data.table(
  pm=structure(hdr="{\\bf PM}",paste0("{\\bf ",the_pairs,"}")),
  do.call(data.table,mapply(function(i)structure(
    hdr=tbl(
        c(
          stri_sub(weekdays(as.Date(i)),1,3),
          stri_sub(i,6,-1)
        ),
        align="@{}c@{}"
    ),
    mapply(function(p){
      the_day<-i
      if(is.na(the_day))return(0)
      ndx<-bar_intervals$date==the_day & bar_intervals$day>0
      if(sum(ndx)<1){
        res<-make_plot(expression({
          plot(NA,type="n",xlab="",ylab="",xlim=c(0,1),ylim=c(0,1),axes=FALSE)
          text(0.5,0.5,labels="No data",cex=5)
        }),width="2cm",height="2cm",envir=environment())
        return(res)
      }
      long_pnls<-cumsum(rowSums(mc(intraday_pair_longs,paste0("^",p))[ndx,,drop=FALSE]))
      short_pnls<-cumsum(rowSums(mc(intraday_pair_shorts,paste0("^",p))[ndx,,drop=FALSE]))
      xlim<-c(min(long_pnls),max(long_pnls))
      ylim<-c(min(short_pnls),max(short_pnls))
      ls_cor<-cor(long_pnls,short_pnls)
      cs<-abs(ls_cor)
      rr<-colorRamp(c("white","red"))
      gr<-colorRamp(c("white","green"))
      ls_col<-ifelse(
        ls_cor<0,
        alpha(rgb(gr(cs)/255),0.33),
        alpha(rgb(rr(cs)/255),0.33)
      )
      make_plot(expression({
        par(mai=c(0,0,0,0))
        plot(
          x=xlim,
          y=ylim,
          type="n",
          xlab="",
          ylab="",
          axes=FALSE
        )
        rect(xlim[1],ylim[1],xlim[2],ylim[2],col=ls_col,border=NA)
        lines(
          x=long_pnls,
          y=short_pnls,
          lwd=20,
          col=rgb(0,0,1,0.5)
        )
        text(
          x=mean(range(long_pnls)),
          y=mean(range(short_pnls)),
          labels=round(100*ls_cor,digits=1),
          col="black",
          font=2,
          cex=8
        )
      }),width="2cm",height="2cm",envir=environment())
    },p=the_pairs)
  ),days_in_data,SIMPLIFY=FALSE))
)

a1<-c("m{1cm}",rep("@{}|@{}m{2cm}",ncol(backtest_long_vs_short_table)-1))

@
\newpage
\section{Long vs short leg price correlation}

\vskip 5mm

\noindent Long and short legs of manager positions should be negatively correlated to
avoid net beta exposures. Reviewing realized behaviour in the form of a ``portfolio path'' 
allows us to identify days with unexpected price action and can be used to evaluate
hedge efficiency. On the grid below, plots are color-coded by the correlation between 
long and short leg performances. Positive correlations are on a red background because
these are situations where the hedge increased (rather than reduced) outcome volatility.

\vskip 10mm

\begin{center}
\Sexpr{ntable(
  backtest_long_vs_short_table,
  add_rownames=FALSE,
  title=paste0(
    "Long leg (x axis) vs short leg (y axis), ",
    "color-coded by sign of correlation ", 
    "(",dot("green"),") negative",
    "(",dot("red"),") positive"
  ),
  scale=0.75,
  alternating=FALSE,
  align=a1,
  halign="c",
  row_end="\\hline\\\\[-7mm]"
)}
\end{center}

<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=

backtest_return_cross_section_table<-data.table(
  pm=structure(hdr="{\\bf PM}",paste0("{\\bf ",the_pairs,"}")),
  do.call(data.table,mapply(function(i)structure(
    hdr=tbl(
        c(
          stri_sub(weekdays(as.Date(i)),1,3),
          stri_sub(i,6,-1)
        ),
        align="@{}c@{}"
    ),
    mapply(function(p){
      if(FALSE)cat(p,"\n")
      the_day<-i
      if(is.na(the_day))return(0)
      ndx<-bar_intervals$date==the_day & bar_intervals$day>0
      if(sum(ndx)<1){
        res<-make_plot(expression({
          plot(NA,type="n",xlab="",ylab="",xlim=c(0,1),ylim=c(0,1),axes=FALSE)
          text(0.5,0.5,labels="No data",cex=5)
        }),
        width="2cm",
        height="2cm",
        envir=environment())
        return(res)
      }
      pnls<-colSums(mc(intraday_pair,paste0("^",p))[ndx,,drop=FALSE])
      if(length(pnls)<1){
        res<-make_plot(expression({
          plot(NA,type="n",xlab="",ylab="",xlim=c(0,1),ylim=c(0,1),axes=FALSE)
          text(0.5,0.5,labels="No data",cex=5)
        }),width="2cm",height="2cm",envir=environment())
        return(res)
      }
      vols<-colSums(mc(abs(intraday_pair),paste0("^",p))[ndx,,drop=FALSE])
      xlim<-c(1,length(pnls))
      ylim<-c(min(pnls),max(pnls))
      make_plot(expression({
        par(mai=c(0,0,0,0))
        plot(
          x=xlim,
          y=ylim,
          type="n",
          xlab="",
          ylab="",
          axes=FALSE
        )
        points(
          x=seq_along(pnls),
          y=sort(pnls),
          cex=5,
          pch=19,
          col=ifelse(sort(pnls)>0,rgb(0,1,0,0.5),rgb(1,0,0,0.5))
        )
        abline(h=0,v=findInterval(0,sort(pnls)),col=rgb(0,0,1,0.25),lwd=10)
      }),
      width="2cm",
      height="2cm",
      envir=environment()
    )},p=the_pairs)
  ),days_in_data,SIMPLIFY=FALSE))
)

a1<-c("m{1cm}",rep("@{}|@{}m{2cm}",ncol(backtest_return_cross_section_table)-1))

@
\newpage
\section{Cross-section of pair returns}

\vskip 5mm

\noindent The cross-section of daily pair returns allows us to distinguish between specific and 
systematic P\&L drivers. If the outcome is determined by one or two outliers we can assume there
is no single factor driving performance. On the grid of plots below, the location of the faint, 
vertical blue line is proportional to the {\bf hit ratio} whereas the faint, horizontal
blue line's location is proportional to the {\bf win/loss ratio}.


\vskip 10mm

\begin{center}
\Sexpr{ntable(
  backtest_return_cross_section_table,
  add_rownames=FALSE,
  title=paste0(
    "Pairs sorted on performance, ",
    "color-coded by daily P\\&L ", 
    "(",dot("green"),") positive",
    "(",dot("red"),") negative"
  ),
  scale=0.75,
  alternating=FALSE,
  align=a1,
  halign="c",
  row_end="\\hline\\\\[-7mm]"
)}
\end{center}


<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
ndx_regex<-"(^SX[0-9A-Z]{1,2}P Index)|(MSEEMOMO Index)|(MCX Index)|(UKX Index)"
open_bars<-which(bar_intervals$day>0)
sector_indices<-mc(intraday_perf,ndx_regex)[open_bars,,drop=FALSE]
sector_betas<-cov(intraday_perf[open_bars,"SXXP Index"],sector_indices)/var(intraday_perf[open_bars,"SXXP Index"])
sector_betas[,"SXXP Index"]<-0
sector_hedges<-intraday_perf[,"SXXP Index",drop=FALSE]%*%sector_betas
sector_spreads<-mc(intraday_perf,ndx_regex)-sector_hedges

# bct : backtest correl table
#

bct_pm<-structure(hdr="{\\bf PM}",paste0("{\\bf ",the_pairs,"}"))

no_plot<-make_plot(expression({
  plot(NA,type="n",xlab="",ylab="",xlim=c(0,1),ylim=c(0,1),axes=FALSE)
  text(0.5,0.5,labels="No data",cex=5)
}),width="2cm",height="2cm",envir=environment())

make_pm_date_cor_plot<-function(the_pm,the_day){
  if(is.na(the_day))return("bad day")
  ndx<-bar_intervals$date==the_day & bar_intervals$day>0
  if(sum(ndx)<10)return(no_plot)
  pnls<-rowSums(mc(intraday_pair,paste0("^",the_pm))[ndx,,drop=FALSE])
  if(all(abs(pnls)<1e-10))return(no_plot)
  if(sd(pnls)<1e-10)return(no_plot)
  sector_spreads_sd<-apply(sector_spreads[ndx,,drop=FALSE],2,sd)
  sector_spreads_used<-sector_spreads[ndx,sector_spreads_sd>0,drop=FALSE]
  res<-try({
      cm<-round(100*drop(cor(pnls,sector_spreads_used)),digits=1)
      si<-names(which.max(abs(cm)))
      sr<-sector_spreads[ndx,si,drop=FALSE]
      if(length(sr)!=length(pnls))return("pnls, sr have different lengths")
      make_plot(expression({
          par(mai=c(0,0,0,0))
          plot(pnls,sr,type="p",xlab="",ylab="",axes=FALSE,lwd=20,pch=19,col=rgb(0,0,1,0.2))
          abline(h=0,col=rgb(1,0,0,0.2),lwd=20)
          abline(v=0,col=rgb(1,0,0,0.2),lwd=20)
          text(
            x=mean(range(pnls)),
            y=mean(range(sr)),
            labels=paste0(gsub(" Index","",si),"\n",cm[si]),
            col=ifelse(cm[si]>0,rgb(0,0.33,0),rgb(0.33,0,0)),
            font=2,
            cex=5
          )
        }),
        width="2cm",
        height="2cm",
        envir=environment()
      )
  },silent=FALSE)
  if(class(res)=="try-error")return(latexTranslate(as.character(res)))
  res
}

pm_day_combo=data.table(
  pair=rep(the_pairs,times=length(days_in_data)),
  day=rep(days_in_data,each=length(the_pairs))
)[,.(
  pair=pair,
  day=day,
  plot=mapply(make_pm_date_cor_plot,the_pm=pair,the_day=day)
)]

pm_day_matrix<-matrix(
  "",
  ncol=length(days_in_data),
  nrow=length(the_pairs),
  dimnames = list(the_pairs,days_in_data)
)
pm_day_matrix[cbind(
  match(pm_day_combo$pair,the_pairs),
  match(pm_day_combo$day,days_in_data)
)]<-pm_day_combo$plot


backtest_correl_table<-data.table(
  pm=bct_pm,
  pm_day_matrix,
  period_betas=structure(
    hdr=tbl(c("whole period stats","for selected","indices")),
    mapply(function(m){
      pnl<-rowSums(mc(intraday_pair,paste0("^",m))[open_bars,,drop=FALSE])
      stats<-rbind(
        data.table(
          stat="SXXP",
          cor=round(100*safe_cor(pnl,sector_indices[,"SXXP Index"]),digits=0),
          beta=round(10000*safe_beta(pnl,sector_indices[,"SXXP Index"]),digits=0),
          hedge=local({
            beta<-safe_beta(pnl,sector_indices[,"SXXP Index"])
            res<-sd(pnl-beta*sector_indices[,"SXXP Index"])/sd(pnl)
            round(100*res,digits=0)
          })
        ),
        data.table(
          stat="SX6P",
          cor=round(100*safe_cor(pnl,sector_indices[,"SX6P Index"]),digits=0),
          beta=round(10000*safe_beta(pnl,sector_indices[,"SX6P Index"]),digits=0),
          hedge=local({
            beta<-safe_beta(pnl,sector_indices[,"SX6P Index"])
            res<-sd(pnl-beta*sector_indices[,"SX6P Index"])/sd(pnl)
            round(100*res,digits=0)
          })
        ),
        data.table(
          stat="SX8P",
          cor=round(100*safe_cor(pnl,sector_indices[,"SX8P Index"]),digits=0),
          beta=round(10000*safe_beta(pnl,sector_indices[,"SX8P Index"]),digits=0),
          hedge=local({
            beta<-safe_beta(pnl,sector_indices[,"SX8P Index"])
            res<-sd(pnl-beta*sector_indices[,"SX8P Index"])/sd(pnl)
            round(100*res,digits=0)
          })
        ),
        data.table(
          stat="SX7P",
          cor=round(100*safe_cor(pnl,sector_indices[,"SX7P Index"]),digits=0),
          beta=round(10000*safe_beta(pnl,sector_indices[,"SX7P Index"]),digits=0),
          hedge=local({
            beta<-safe_beta(pnl,sector_indices[,"SX7P Index"])
            res<-sd(pnl-beta*sector_indices[,"SX7P Index"])/sd(pnl)
            round(100*res,digits=0)
          })
        ),
        data.table(
          stat="MCX",
          cor=round(100*safe_cor(pnl,sector_indices[,"MCX Index"]),digits=0),
          beta=round(10000*safe_beta(pnl,sector_indices[,"MCX Index"]),digits=0),
          hedge=local({
            beta<-safe_beta(pnl,sector_indices[,"MCX Index"])
            res<-sd(pnl-beta*sector_indices[,"MCX Index"])/sd(pnl)
            round(100*res,digits=0)
          })
        )
      )
      ntable(df=stats,alternating="FALSE",add_rownames=FALSE,scale=0.75)
    },the_pairs)
  )
)

a1<-c("m{1cm}",rep("@{}|@{}m{2cm}",ncol(backtest_correl_table)-2),"@{}|@{}m{3cm}")

@
\newpage
\section{Return correlations}

\vskip 5mm

\noindent Identifying the index with the highest intra-day correlation to a manager's
position may help with understanding P\&L drivers.

\vskip 10mm

\begin{center}
\Sexpr{ntable(
  backtest_correl_table,
  add_rownames=FALSE,
  title="Market-hedged sector index with highest intra-day correlation (x axis: manager return)", 
  scale=0.75,
  alternating=FALSE,
  align=a1,
  halign="c",
  row_end="\\hline\\\\[-6mm]"
)}
\end{center}


<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
ndx_regex<-"^SX[0-9A-Z]{1,2}P Index$"

ndx_tickers<-Filter(
  function(x)grepl(ndx_regex,x),
  intersect(colnames(factor_local_tret),colnames(intraday_perf))
)

open_bars<-which(bar_intervals$day>0)

intraday_sector_indices<-structure(
  intraday_perf[open_bars,ndx_tickers,drop=FALSE],
  dimnames=list(
    paste0(bar_intervals$date[open_bars],"T",bar_intervals$time[open_bars]),
    ndx_tickers
  )
)

daily_sector_indices<-factor_local_tret[,ndx_tickers,drop=FALSE]


intraday_managers<-structure(
  mapply(
    function(p)rowSums(mc(intraday_pair[open_bars,],paste0("^",p))),
    the_pairs
  ),
  dimnames=list(
    paste0(bar_intervals$date[open_bars],"T",bar_intervals$time[open_bars]),
    the_pairs
  )
)


sector_pairs<-data.table(
  ndx1=rep(ndx_tickers,times=length(ndx_tickers)),
  ndx2=rep(ndx_tickers,each=length(ndx_tickers))      
)[
 ndx1!=ndx2
][,
 c(
   "intraday_cov","daily_cov",
   "intraday_cor","daily_cor",
   "intraday_vol1","daily_vol1",
   "intraday_vol2","daily_vol2"
  ):=list(
  intraday_cov=mapply(
    cov,
    data.table(intraday_sector_indices[,ndx1]),
    data.table(intraday_sector_indices[,ndx2])
  ),
  daily_cov=mapply(
    cov,
    data.table(daily_sector_indices[,ndx1]),
    data.table(daily_sector_indices[,ndx2])
  ),
  intraday_cor=mapply(
    cor,
    data.table(intraday_sector_indices[,ndx1]),
    data.table(intraday_sector_indices[,ndx2])
  ),
  daily_cor=mapply(
    cor,
    data.table(daily_sector_indices[,ndx1]),
    data.table(daily_sector_indices[,ndx2])
  ),
  intraday_vol1=apply(intraday_sector_indices[,ndx1],2,sd),
  daily_vol1=apply(daily_sector_indices[,ndx1],2,sd),
  intraday_vol2=apply(intraday_sector_indices[,ndx2],2,sd),
  daily_vol2=apply(daily_sector_indices[,ndx2],2,sd)
 )
][,
 c("intraday_beta","daily_beta"):=list(
   intraday_beta=intraday_cov/(intraday_vol2*intraday_vol2),
   daily_beta=daily_cov/(daily_vol2*daily_vol2)
  )
][,
  c(
   "intraday_spread","daily_spread",
   "intraday_money_neutral_spread","daily_money_neutral_spread"
  ):=list(
   intraday_spread=mapply(
    function(ndx1,ndx2,intraday_beta){
      structure(
        intraday_sector_indices[,ndx1]-intraday_beta*intraday_sector_indices[,ndx2],
        .Names=rownames(intraday_sector_indices)
      )
    },
    ndx1=ndx1,
    ndx2=ndx2,
    intraday_beta=intraday_beta,
    SIMPLIFY=FALSE
  ),
  daily_spread=mapply(
    function(ndx1,ndx2,daily_beta){
      structure(
        daily_sector_indices[,ndx1]-daily_beta*daily_sector_indices[,ndx2],
        .Names=rownames(daily_sector_indices)
      )
    },
    ndx1=ndx1,
    ndx2=ndx2,
    daily_beta=daily_beta,
    SIMPLIFY=FALSE
  ),
  intraday_money_neutral_spread=mapply(
    function(ndx1,ndx2){
      structure(
        intraday_sector_indices[,ndx1]-intraday_sector_indices[,ndx2],
        .Names=rownames(intraday_sector_indices)
      )
    },
    ndx1=ndx1,
    ndx2=ndx2,
    SIMPLIFY=FALSE
  ),
  daily_money_neutral_spread=mapply(
    function(ndx1,ndx2){
      structure(
        daily_sector_indices[,ndx1]-daily_sector_indices[,ndx2],
        .Names=rownames(daily_sector_indices)
      )
    },
    ndx1=ndx1,
    ndx2=ndx2,
    SIMPLIFY=FALSE
  )
)
][,
  c(
    "intraday_spread_vol",
    "daily_spread_vol",
    "sn"
  ):=list(
    intraday_spread_vol=mapply(sd,intraday_spread),
    daily_spread_vol=mapply(sd,daily_spread),
    sn=gsub(" Index","",paste0(ndx1,"|",ndx2))
  )
]

max_cor_table<-data.table(
  pm=structure(hdr="{\\bf PM}",paste0("{\\bf ",the_pairs,"}")),
  gross=mapply(function(p)round(100*sum(abs(mc(pair_exposure,p))),digits=0),the_pairs),
  intraday_sector=structure(
    hdr=tbl(c("10-day cor on 10min bars","market-neutral sector")),
    mapply(function(p){
      res<-mapply(
        safe_cor,
        strat=structure(
          sector_pairs[ndx2=="SXXP Index",intraday_spread],
          .Names=sector_pairs[ndx2=="SXXP Index",sn]
        ),
        MoreArgs=list(factor=intraday_managers[,p,drop=FALSE])
      )
      res1<-mapply(
        function(x,y){
          if(any(is.na(c(x,y))))return(0)
          if(any(is.na(c(sd(x),sd(y)))))return(0)
          if(any(c(sd(x),sd(y))==0))return(0)
          cov(x,y)/var(x)
        },
        x=structure(
          sector_pairs[ndx2=="SXXP Index",intraday_spread],
          .Names=sector_pairs[ndx2=="SXXP Index",sn]
        ),
        MoreArgs=list(y=intraday_managers[,p,drop=FALSE])
      )
      o<-order(-abs(res))[1:5]
      ntable(
        df=data.table(
          sector=gsub(" Index","",sector_pairs[ndx2=="SXXP Index",ndx1][o]),
          cor=round(100*res[o],digits=1),
          beta=round(100*res1[o],digits=1)
        ),
        add_rownames=FALSE,
        add_header=TRUE,
        alternating=FALSE
      )
    },the_pairs)
  ),
  daily_sector=structure(
    hdr=tbl(c("2year cor on daily returns","market-neutral sector")),
    mapply(function(p){
      res<-mapply(
        safe_cor,
        strat=structure(
          sector_pairs[ndx2=="SXXP Index",daily_spread],
          .Names=sector_pairs[ndx2=="SXXP Index",sn]
        ),
        MoreArgs=list(factor=rowSums(mc(manager_local_pnl,p)))
      )
      res1<-mapply(
        function(x,y){
          if(any(is.na(c(x,y))))return(0)
          if(any(is.na(c(sd(x),sd(y)))))return(0)
          if(any(c(sd(x),sd(y))==0))return(0)
          cov(x,y)/var(x)
        },
        x=structure(
          sector_pairs[ndx2=="SXXP Index",daily_spread],
          .Names=sector_pairs[ndx2=="SXXP Index",sn]
        ),
        MoreArgs=list(rowSums(mc(manager_local_pnl,p)))
      )
      o<-order(-abs(res))[1:5]
      ntable(
        df=data.table(
          sector=gsub(" Index","",sector_pairs[ndx2=="SXXP Index",ndx1][o]),
          cor=round(100*res[o],digits=1),
          beta=round(100*res1[o],digits=1)
        ),
        add_rownames=FALSE,
        add_header=TRUE,
        alternating=FALSE
      )
    },the_pairs)
  ),
  intraday_spreads=structure(
    hdr=tbl(c("10-day cor on 10min bars","beta-neutral spread")),
    mapply(function(p){
      res<-mapply(
        safe_cor,
        strat=structure(sector_pairs$intraday_spread,.Names=sector_pairs$sn),
        MoreArgs=list(factor=intraday_managers[,p,drop=FALSE])
      )
      res1<-mapply(
        function(x,y){
          if(any(is.na(c(x,y))))return(0)
          if(any(is.na(c(sd(x),sd(y)))))return(0)
          if(any(c(sd(x),sd(y))==0))return(0)
          cov(x,y)/var(x)
        },
        x=structure(sector_pairs$intraday_spread,.Names=sector_pairs$sn),
        MoreArgs=list(y=intraday_managers[,p,drop=FALSE])
      )
      o<-order(-abs(res))[1:5]
      ntable(
        df=data.table(
          spread=sector_pairs$sn[o],
          cor=round(100*res[o],digits=1),
          beta=round(100*res1[o],digits=1)
        ),
        add_rownames=FALSE,
        add_header=TRUE,
        alternating=FALSE
      )
    },the_pairs)
  ),
  daily_spreads=structure(
    hdr=tbl(c("2 year cor on daily returns","beta-neutral spread")),
    mapply(function(p){
      res<-mapply(
        safe_cor,
        strat=structure(sector_pairs$daily_spread,.Names=sector_pairs$sn),
        MoreArgs=list(factor=rowSums(mc(manager_local_pnl,p)))
      )
      res1<-mapply(
        function(x,y){
          if(any(is.na(c(x,y))))return(0)
          if(any(is.na(c(sd(x),sd(y)))))return(0)
          if(any(c(sd(x),sd(y))==0))return(0)
          cov(x,y)/var(x)
        },
        structure(sector_pairs$daily_spread,.Names=sector_pairs$sn),
        MoreArgs=list(rowSums(mc(manager_local_pnl,p)))
      )
      o<-order(-abs(res))[1:5]
      ntable(
        df=data.table(
          spread=sector_pairs$sn[o],
          cor=round(100*res[o],digits=1),
          beta=round(100*res1[o],digits=1)
        ),
        add_rownames=FALSE,
        add_header=TRUE,
        alternating=FALSE
      )
    },the_pairs)
  ),
  long_short_correl=structure(
    hdr=tbl(c("Long vs short correlations","by manager, pairs")),
    mapply(function(p){
      daily_long_pnl<-rowSums(mc(pair_long_pnl,p))
      daily_short_pnl<-rowSums(mc(pair_short_pnl,p))
      intraday_long_pnl<-structure(
        rowSums(mc(intraday_pair_longs[open_bars,],p)),
        .Names=paste0(bar_intervals$date[open_bars],"T",bar_intervals$time[open_bars])
      )
      intraday_short_pnl<-structure(
        rowSums(mc(intraday_pair_shorts[open_bars,],p)),
        .Names=paste0(bar_intervals$date[open_bars],"T",bar_intervals$time[open_bars])
      )
      df<-rbind(
        data.table(
          window="2yr, daily, L/S",
          cor=round(100*cor(daily_long_pnl,daily_short_pnl),digits=1)
        ),
        data.table(
          window="2yr, daily, pair mean",
          cor=round(100*mean(mapply(
            safe_cor,
            data.table(mc(pair_long_pnl,p)),
            data.table(mc(pair_short_pnl,p))
          )),digits=1)
        ),
        data.table(
          window="10day, 10min, L/S",
          cor=round(100*cor(intraday_long_pnl,(-1)*intraday_short_pnl),digits=1)
        ),
        data.table(
          window="10day, 10min, pair mean",
          cor=round(100*mean(mapply(
            safe_cor,
            data.table(mc(intraday_pair_longs[open_bars,,drop=FALSE],p)),
            data.table((-1)*mc(intraday_pair_shorts[open_bars,,drop=FALSE],p))
          )),digits=1)
        ),
        data.table(
          window="1day, 10min, L/S",
          cor=round(100*safe_cor(
            rowSums(mc(intraday_pair_longs[bar_intervals$day==max(bar_intervals$day),,drop=FALSE],p)),
            (-1)*rowSums(mc(intraday_pair_shorts[bar_intervals$day==max(bar_intervals$day),,drop=FALSE],p))
          ),digits=1)
        )
      )
      ntable(
        df=df,
        add_rownames=FALSE,
        add_header=TRUE,
        alternating=FALSE
      )
    },the_pairs)
  )
)

a1<-c("m{1cm}","@{}|@{}c","@{}|@{}c","@{}|@{}c","@{}|@{}c","@{}|@{}c","@{}|@{}c")

#
#
#
best_spread<-function(pm,n=5){
   pm_bars<-rowSums(mc(intraday_pair[open_bars,],pm))
   res<-mapply(
    cor,
    structure(sector_pairs$intraday_spread,.Names=sector_pairs$sn),
    MoreArgs=list(pm_bars)
   )
   res1<-mapply(
    function(x,y)cov(x,y)/var(x),
    x=structure(sector_pairs$intraday_spread,.Names=sector_pairs$sn),
    MoreArgs=list(y=pm_bars)
  )
  o<-order(-abs(res))[1:n]
  data.table(
    spread=sector_pairs$sn[o],
    cor=round(100*res[o],digits=1),
    beta=round(100*res1[o],digits=1)
  )
}

x<-best_spread("*",5)
intraday_best<-do.call(cbind,sector_pairs[,.SD,keyby=sn][x$spread,intraday_spread])%*%matrix(sign(x$cor)/5,ncol=1)
intraday_duke<-rowSums(intraday_pair[open_bars,])
duke_best_sd_ratio<-sd(intraday_best)/sd(intraday_duke)

x1<-cumsum(intraday_duke)
x2<-cumsum(intraday_best/duke_best_sd_ratio)
x3<-cumsum(intraday_best)
ylim<-c(min(c(x1,x2)),max(c(x1,x2)))


@
\newpage
\section{Relevant spreads and indices: Beta-neutral case}

\vskip 5mm

\noindent Identifying the index and index spreads with the highintra-day correlation 
to a manager's position may help with understanding P\&L drivers. In addition, portfolio
or manager-level overlays can be constructed using this information.

\vskip 10mm

\begin{center}
\Sexpr{ntable(
  max_cor_table,
  add_rownames=FALSE,
  title=paste0(
    curly("\\bf Current portfolio")," : ",
    "Spread with highest similarity to manager positions, position correlations (pct), betas (pct AUM)"
  ), 
  scale=0.75,
  alternating=FALSE,
  align=a1,
  halign="c",
  row_end="\\hline"
)}
\end{center}

\begin{center}
\begin{tabular}{m{8cm} m{8cm}}
\hline
\begin{center}
\begin{tabular}{m{8cm}}
 10-day performance (\Sexpr{dot("red")}) of an equally-weighted portfolio comprising the 
 top 5 most correlated {\bf beta-neutral} spreads.  DUKE performance (\Sexpr{dot("blue")}) over 
 the same period. The spread portfolio has been scaled to match DUKE's volatility. 
\\
\Sexpr{ntable(
  df=rbind(
    data.table(
      stat="DUKE-proxy 2w correlation (pct)",
      value=round(100*cor(diff(x1),diff(x2)),digits=0)
    ),
    data.table(
      stat="DUKE 2w beta to proxy (bps)",
      value=round(10000*safe_beta(diff(x1),diff(x3)),digits=0)
    ),
    data.table(
      stat="2w vol reduction on shorting proxy (pct)",
      value=round(100*(1-sd(diff(x1)-safe_beta(diff(x1),diff(x3))*diff(x3))/sd(diff(x1))),digits=0)
    )
  ),
  add_rownames=FALSE,
  alternating=FALSE
)}
\\
\end{tabular}
\end{center}
&
\Sexpr{make_plot(expression(
  par(mai=c(0,0,0,0)),
  plot(x1,type="l",lwd=3,col=rgb(0,0,1,0.5),ylim=ylim,axes=FALSE,xlab="",ylab=""),
  lines(x2,lwd=3,col=rgb(1,0,0,0.5))
),width="8cm",height="4cm",envir=environment())}
\\
\hline
\end{tabular}
\end{center}

<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=


relevant_spread_table_money_neutral<-data.table(
  pm=structure(hdr="{\\bf PM}",paste0("{\\bf ",the_pairs,"}")),
  gross=mapply(function(p)round(100*sum(abs(mc(pair_exposure,p))),digits=0),the_pairs),
  intraday_sector=structure(
    hdr=tbl(c("10-day cor on 10min bars","money-neutral sector")),
    mapply(function(p){
      res<-mapply(
        safe_cor,
        strat=structure(
          sector_pairs[ndx2=="SXXP Index",intraday_money_neutral_spread],
          .Names=sector_pairs[ndx2=="SXXP Index",sn]
        ),
        MoreArgs=list(factor=intraday_managers[,p])
      )
      res1<-mapply(
        function(x,y){
          if(any(is.na(c(x,y))))return(0)
          if(any(is.na(c(sd(x),sd(y)))))return(0)
          if(any(c(sd(x),sd(y))==0))return(0)
          cov(x,y)/var(x)
        },
        x=structure(
          sector_pairs[ndx2=="SXXP Index",intraday_money_neutral_spread],
          .Names=sector_pairs[ndx2=="SXXP Index",sn]
        ),
        MoreArgs=list(y=intraday_managers[,p])
      )
      o<-order(-abs(res))[1:5]
      ntable(
        df=data.table(
          sector=gsub(" Index","",sector_pairs[ndx2=="SXXP Index",ndx1][o]),
          cor=round(100*res[o],digits=1),
          beta=round(100*res1[o],digits=1)
        ),
        add_rownames=FALSE,
        add_header=TRUE,
        alternating=FALSE
      )
    },the_pairs)
  ),
  daily_sector=structure(
    hdr=tbl(c("2year cor on daily returns","money-neutral sector")),
    mapply(function(p){
      res<-mapply(
        safe_cor,
        strat=structure(
          sector_pairs[ndx2=="SXXP Index",daily_money_neutral_spread],
          .Names=sector_pairs[ndx2=="SXXP Index",sn]
        ),
        MoreArgs=list(factor=rowSums(mc(manager_local_pnl,p)))
      )
      res1<-mapply(
        function(x,y){
          if(any(is.na(c(x,y))))return(0)
          if(any(is.na(c(sd(x),sd(y)))))return(0)
          if(any(c(sd(x),sd(y))==0))return(0)
          cov(x,y)/var(x)
        },
        x=structure(
          sector_pairs[ndx2=="SXXP Index",daily_money_neutral_spread],
          .Names=sector_pairs[ndx2=="SXXP Index",sn]
        ),
        MoreArgs=list(rowSums(mc(manager_local_pnl,p)))
      )
      o<-order(-abs(res))[1:5]
      ntable(
        df=data.table(
          sector=gsub(" Index","",sector_pairs[ndx2=="SXXP Index",ndx1][o]),
          cor=round(100*res[o],digits=1),
          beta=round(100*res1[o],digits=1)
        ),
        add_rownames=FALSE,
        add_header=TRUE,
        alternating=FALSE
      )
    },the_pairs)
  ),
  intraday_spreads=structure(
    hdr=tbl(c("10-day cor on 10min bars","money-neutral spread")),
    mapply(function(p){
      res<-mapply(
        safe_cor,
        strat=structure(sector_pairs$intraday_money_neutral_spread,.Names=sector_pairs$sn),
        MoreArgs=list(factor=intraday_managers[,p])
      )
      res1<-mapply(
        function(x,y){
          if(any(is.na(c(x,y))))return(0)
          if(any(is.na(c(sd(x),sd(y)))))return(0)
          if(any(c(sd(x),sd(y))==0))return(0)
          cov(x,y)/var(x)
        },
        x=structure(sector_pairs$intraday_money_neutral_spread,.Names=sector_pairs$sn),
        MoreArgs=list(y=intraday_managers[,p])
      )
      o<-order(-res)[1:5]
      ntable(
        df=data.table(
          spread=sector_pairs$sn[o],
          cor=round(100*res[o],digits=1),
          beta=round(100*res1[o],digits=1)
        ),
        add_rownames=FALSE,
        add_header=TRUE,
        alternating=FALSE
      )
    },the_pairs)
  ),
  daily_spreads=structure(
    hdr=tbl(c("2 year cor on daily returns","money-neutral spread")),
    mapply(function(p){
      res<-mapply(
        safe_cor,
        strat=structure(sector_pairs$daily_money_neutral_spread,.Names=sector_pairs$sn),
        MoreArgs=list(factor=rowSums(mc(manager_local_pnl,p)))
      )
      res1<-mapply(
        function(x,y){
          if(any(is.na(c(x,y))))return(0)
          if(any(is.na(c(sd(x),sd(y)))))return(0)
          if(any(c(sd(x),sd(y))==0))return(0)
          cov(x,y)/var(x)
        },
        structure(sector_pairs$daily_money_neutral_spread,.Names=sector_pairs$sn),
        MoreArgs=list(rowSums(mc(manager_local_pnl,p)))
      )
      o<-order(-res)[1:5]
      ntable(
        df=data.table(
          spread=sector_pairs$sn[o],
          cor=round(100*res[o],digits=1),
          beta=round(100*res1[o],digits=1)
        ),
        add_rownames=FALSE,
        add_header=TRUE,
        alternating=FALSE
      )
    },the_pairs)
  ),
  long_short_correl=structure(
    hdr=tbl(c("Long vs short correlations","by manager, pairs")),
    mapply(function(p){
      daily_long_pnl<-rowSums(mc(pair_long_pnl,p))
      daily_short_pnl<-rowSums(mc(pair_short_pnl,p))
      intraday_long_pnl<-structure(
        rowSums(mc(intraday_pair_longs[open_bars,],p)),
        .Names=paste0(bar_intervals$date[open_bars],"T",bar_intervals$time[open_bars])
      )
      intraday_short_pnl<-structure(
        rowSums(mc(intraday_pair_shorts[open_bars,],p)),
        .Names=paste0(bar_intervals$date[open_bars],"T",bar_intervals$time[open_bars])
      )
      df<-rbind(
        data.table(
          window="2yr, daily, L/S",
          cor=round(100*cor(daily_long_pnl,daily_short_pnl),digits=1)
        ),
        data.table(
          window="2yr, daily, pair mean",
          cor=round(100*mean(mapply(
            safe_cor,
            data.table(mc(pair_long_pnl,p)),
            data.table(mc(pair_short_pnl,p))
          )),digits=1)
        ),
        data.table(
          window="10day, 10min, L/S",
          cor=round(100*cor(intraday_long_pnl,(-1)*intraday_short_pnl),digits=1)
        ),
        data.table(
          window="10day, 10min, pair mean",
          cor=round(100*mean(mapply(
            safe_cor,
            data.table(mc(intraday_pair_longs[open_bars,],p)),
            data.table((-1)*mc(intraday_pair_shorts[open_bars,],p))
          )),digits=1)
        ),
        data.table(
          window="1day, 10min, L/S",
          cor=round(100*safe_cor(
            rowSums(mc(intraday_pair_longs[bar_intervals$day==max(bar_intervals$day),,drop=FALSE],p)),
            (-1)*rowSums(mc(intraday_pair_shorts[bar_intervals$day==max(bar_intervals$day),,drop=FALSE],p))
          ),digits=1)
        )
      )
      ntable(
        df=df,
        add_rownames=FALSE,
        add_header=TRUE,
        alternating=FALSE
      )
    },the_pairs)
  )
)

a1<-c("m{1cm}","@{}|@{}c","@{}|@{}c","@{}|@{}c","@{}|@{}c","@{}|@{}c","@{}|@{}c")

#
#
#
best_money_neutral_spread<-function(pm,n=5){
   pm_bars<-rowSums(mc(intraday_pair[open_bars,],pm))
   res<-mapply(
    safe_cor,
    strat=structure(sector_pairs$intraday_money_neutral_spread,.Names=sector_pairs$sn),
    MoreArgs=list(factor=pm_bars)
   )
   res1<-mapply(
    function(x,y){
      if(any(is.na(c(x,y))))return(0)
      if(any(is.na(c(sd(x),sd(y)))))return(0)
      if(any(c(sd(x),sd(y))==0))return(0)
      cov(x,y)/var(x)
    },
    x=structure(sector_pairs$intraday_money_neutral_spread,.Names=sector_pairs$sn),
    MoreArgs=list(y=pm_bars)
  )
  o<-order(-res)[1:n]
  data.table(
    spread=sector_pairs$sn[o],
    cor=round(100*res[o],digits=1),
    beta=round(100*res1[o],digits=1)
  )
}

n<-5
x<-best_money_neutral_spread("*",n)

intraday_best_money_neutral<-
  do.call(cbind,sector_pairs[,.SD,keyby=sn][x$spread,intraday_money_neutral_spread]) %*%
  matrix(sign(x$cor)/n,ncol=1)

intraday_duke<-rowSums(intraday_pair[open_bars,])
duke_best_money_neutral_sd_ratio<-sd(intraday_best_money_neutral)/sd(intraday_duke)

x1<-cumsum(intraday_duke)
x2<-cumsum(intraday_best_money_neutral/duke_best_money_neutral_sd_ratio)
x3<-cumsum(intraday_best_money_neutral)
ylim<-c(min(c(x1,x2)),max(c(x1,x2)))



@

\newpage
\section{Relevant spreads and indices: Money-neutral case}

\vskip 5mm

\noindent Identifying the index and index spreads with the highintra-day correlation 
to a manager's position may help with understanding P\&L drivers. In addition, portfolio
or manager-level overlays can be constructed using this information.

\vskip 10mm

\begin{center}
\Sexpr{ntable(
  relevant_spread_table_money_neutral,
  add_rownames=FALSE,
  title=paste0(
    curly("\\bf Current portfolio")," : ",
    "Spread with highest similarity to manager positions, position correlations (pct), betas (pct AUM)"
  ), 
  scale=0.75,
  alternating=FALSE,
  align=a1,
  halign="c",
  row_end="\\hline"
)}
\end{center}

\begin{center}
\begin{tabular}{m{8cm} m{8cm}}
\hline
\begin{center}
\begin{tabular}{m{8cm}}
 10-day performance (\Sexpr{dot("red")}) of an equally-weighted portfolio comprising the 
 top 5 most correlated {\bf money-neutral} spreads.  DUKE performance (\Sexpr{dot("blue")}) over 
 the same period. The spread portfolio has been scaled to match DUKE's volatility. 
 \\
\Sexpr{ntable(
  df=rbind(
    data.table(
      stat="DUKE-proxy 2w correlation (pct)",
      value=round(100*cor(diff(x1),diff(x2)),digits=0)
    ),
    data.table(
      stat="DUKE 2w beta to proxy (bps)",
      value=round(10000*safe_beta(diff(x1),diff(x3)),digits=0)
    ),
    data.table(
      stat="2w vol reduction on shorting proxy (pct)",
      value=round(100*(1-sd(diff(x1)-safe_beta(diff(x1),diff(x3))*diff(x3))/sd(diff(x1))),digits=0)
    )
  ),
  add_rownames=FALSE,
  alternating=FALSE
)}
\\
\end{tabular}
\end{center}
&
\Sexpr{make_plot(expression(
  par(mai=c(0,0,0,0)),
  plot(x1,type="l",lwd=3,col=rgb(0,0,1,0.5),ylim=ylim,axes=FALSE,xlab="",ylab=""),
  lines(x2,lwd=3,col=rgb(1,0,0,0.5))
),width="8cm",height="4cm",envir=environment())}
\\
\hline
\end{tabular}
\end{center}


<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
require(data.table)
require(magrittr)

safe_cor<-function(x,y)if(any(mapply(sd,list(x,y))<1e-10)){0}else{
  round(100*cor(x,y),digits=0)
}

duke_lt_matrix<-NNcast(
  data=duke_lt,
  i_name="SuperSectorIndex",
  j_name="gsub('[0-9]+$','',Pair)",
  v_name="LookThrough+Outright",
  fun=function(x)round(sum(x),digits=1)
) %>%
{cbind(.,DUKE=rowSums(.))} %>%
{rbind(.,NET=colSums(.),GROSS=colSums(abs(.)))} %>%
round(digits=1)

sector_exposure<- duke_lt_matrix %>% 
{ data.table(sector=rownames(.),.)}

for(i in setdiff(names(sector_exposure),"sector")){
  attributes(sector_exposure[[i]])$format<-quote(sign_color(n_fmt(this),this))
}

z<-intraday_managers*10000
colnames(z)[1]<-"DUKE"
z<-z[,colnames(duke_lt_matrix)]
x<-duke_lt_matrix[grepl("Index$",rownames(duke_lt_matrix)),]
y<-intraday_sector_indices[,rownames(x)]%*%x
w<-factor_local_tret[,rownames(x)]%*%x
v<-manager_local_pnl%>%{cbind(.,DUKE=rowSums(.))[,colnames(y)]}

explain<-data.table(
  pm=structure(colnames(y),hrd="Manger"),
  cor_short=structure(
    round(100*mapply(safe_cor,data.table(y),data.table(z)),digits=1),
    format=quote(sign_color(n_fmt(this),this)),
    hdr=tbl(c("Realized","correlation","intraday","2 weeks"))
  ),
  cor_long=structure(
    round(100*mapply(safe_cor,data.table(v),data.table(w)),digits=1),
    format=quote(sign_color(n_fmt(this),this)),
    hdr=tbl(c("Realized","correlation","daily","2 years"))
  ),
  predicted=structure(
    round(colSums(y),digits=1),
    format=quote(sign_color(n_fmt(this),this)),
    hdr=tbl(c("Predicted","P\\&L","intraday","2 weeks"))
  ),
  actual=structure(
    round(colSums(z),digits=1),
    format=quote(sign_color(n_fmt(this),this)),
    hdr=tbl(c("Actual","P\\&L","intraday","2 weeks"))
  )
)

@
\newpage
\section{Look-through sector exposures}

\vskip 5mm

\begin{center}
\Sexpr{ntable(
 df=sector_exposure
)}
\end{center}

\vskip 5mm

We compare actual manager performance to predicted performance from index look-through
holdings. Outcomes and intraday return correlations show how much of the portfolio risk 
can be attributed to sector exposures.

\vskip 5mm

\begin{center}
\Sexpr{ntable(
 df=explain
)}
\end{center}

<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=

pair_stats<-function(the_subset,cutoff="2018-07-01"){
  res0<-the_subset[,c("pair","final_pnl_mtd","final_pnl_ytd","final_pnl_ltd")]
  res1<-mapply(function(x)data.table(
    SUM=sum(x),
    HITRATIO=round(100*sum(pmax(sign(x),0))/max(length(x),1),digits=1),
    WINLOSSRATIO=round(100*scrub(sum(pmax(x,0))/sum(pmax(-x,0))),digits=1)
  ),res0[,c("final_pnl_mtd","final_pnl_ytd","final_pnl_ltd")]) %>%
  {data.table(pair=rownames(.),.)}
  res2<-rbind(res0,res1)
  res2$status<-c(
    ifelse(
      the_subset$final_date<max(the_subset$final_date),
      paste0("{\\tt CLOSE} ",the_subset$final_date),
      ifelse(
        the_subset$initial_date>=cutoff,
        paste0("{\\tt OPEN} ",the_subset$initial_date),
        paste0("{\\tt LIVE} ",the_subset$initial_date)
      )
    ),
    rep("",nrow(res1))
  )
  res2$gross<-c(as.character(round(the_subset$final_gross,digits=1)),rep("",nrow(res1)))
  res2$net<-c(as.character(round(the_subset$final_net,digits=1)),rep("",nrow(res1)))
  attributes(res2[["final_pnl_mtd"]])$format<-quote(sign_color(n_fmt(this),this))
  attributes(res2[["final_pnl_ytd"]])$format<-quote(sign_color(n_fmt(this),this))
  attributes(res2[["final_pnl_ltd"]])$format<-quote(sign_color(n_fmt(this),this))
  attributes(res2[["gross"]])$format<-quote(sign_color(n_fmt(this),this))
  attributes(res2[["net"]])$format<-quote(sign_color(n_fmt(this),this))
  res2
}

pair_subset<-function(
  manager="*",
  cutoff="2018-06-01",
  filter=grepl(manager,dataset$bucket),
  dataset=get("duke",parent.frame())
)(
dataset[filter] %>%
  {.$pair<-gsub("_PAIR_","",.$bucket);.} %>%
  {.$bucket<-NULL;.} %>% 
  {.[!is.na(gross),.(
    initial_date=min(date),
    final_date=max(date),
    duration=date%>%{c(min(.),max(.))}%>%as.Date(format="%Y-%m-%d")%>%as.integer%>%diff,
    peak_date=date[which.max(cumprod(1+scrub(pnl)))],
    peak_pnl=round(10000*max(cumprod(1+scrub(pnl))-1),digits=1),
    last_pnl=round(10000*(cumprod(1+scrub(pnl))-1)[which(date==max(date))],digits=1),
    start_date=as.Date(min(date),format="%Y-%m-%d"),
    end_date=as.Date(max(date),format="%Y-%m-%d"),
    final_gross=round(10000*gross[which(date==max(date))],digits=1),
    final_net=round(10000*net[which(date==max(date))],digits=1),
    final_pnl_draw=round(10000*pnl_draw[which(date==max(date))],digits=1),
    final_pnl_ltd=round(10000*pnl_ltd[which(date==max(date))],digits=1),
    final_pnl_ytd=round(10000*pnl_ytd[which(date==max(date))],digits=1),
    final_pnl_mtd=round(10000*pnl_mtd[which(date==max(date))],digits=1),
    final_pnl_rolling=round(10000*pnl_rolling[which(date==max(date))],digits=1)
  ),keyby=pair]}
)[final_date>=cutoff]


require(DBI)
require(data.table)
require(gsubfn)
require(magrittr)

source("https://raw.githubusercontent.com/satrapade/pairs/master/utility/query.R")
source("https://raw.githubusercontent.com/satrapade/pairs/master/utility/make_query.R")
source("https://raw.githubusercontent.com/satrapade/pairs/master/utility/fetch_bucket_pnl.R")
source("https://raw.githubusercontent.com/satrapade/pairs/master/utility/make_date_range.R")
#source("https://raw.githubusercontent.com/satrapade/pairs/master/utility/pair_subset.R")
#source("https://raw.githubusercontent.com/satrapade/pairs/master/utility/pair_stats.R")
source("https://raw.githubusercontent.com/satrapade/pairs/master/utility/fetch_risk_report.R")

if(FALSE){
  
  if(exists("db"))dbDisconnect(db)
  db<-dbConnect(
    odbc::odbc(), 
    .connection_string = paste0(
      "driver={SQL Server};",
      "server=SQLS071FP\\QST;",
      "database=PRDQSTFundPerformance;",
      "trusted_connection=true"
    )
  )
  
  duke<-fetch_bucket_pnl(db)
  
  duke_managers<-duke[,bucket]%>%stri_replace_all("",regex="_PAIR_[0-9]+$")%>%unique%>%sort
  
  duke_manager_pair_stats<-setNames(rep(list(NULL),length(duke_managers)),duke_managers)
  
  for(i in duke_managers){
      the_subset<-pair_subset(manager=paste0("^",i),cutoff="2018-07-01",dataset=duke)
      if(nrow(the_subset)<1)next
      the_stats<-pair_stats(the_subset,cutoff="2018-07-01")
      duke_manager_pair_stats[[i]]<-the_stats
  }

  ndx<-which(mapply(length,duke_manager_pair_stats)>0)
  
  res1<-mapply(
    function(x,n)paste0(
      "\\subsection{",n,"}\n",
      "\\vskip 5mm \n",
      if(nrow(x)<0){""}else{ntable(df=x)},
      "\\vskip 5mm \n"
    ),
    x=duke_manager_pair_stats[ndx],
    n=duke_managers[ndx]
  )
  
} else {
  duke<-data.table(
      pnl=0,
      date="1900-01-01",
      pnl_mtd=0,
      pnl_ytd=0,
      pnl_ltd=0,
      pnl_rolling=0,
      pnl_draw=0,
      gross=0,
      net=0
  )
  res1<-data.table(
    message="performance team DB not available"
  )
}

if(!exists("duke")){
  duke<-data.table(
      pnl=0,
      date="1900-01-01",
      pnl_mtd=0,
      pnl_ytd=0,
      pnl_ltd=0,
      pnl_rolling=0,
      pnl_draw=0,
      gross=0,
      net=0
  )
  res1<-data.table(
    message="performance team DB not available"
  )
}

@
\newpage
\section{Pair performance}

\vskip 10mm

\begin{center}
\begin{tabular}{l l}
\hline
\rowcolor{gray!20}
\multicolumn{2}{c}{Latest bucket date for which numbers are available for DUKE} \\
Daily P\&L  &  \Sexpr{duke[!is.na(pnl)][,max(date)]} \\
Month-to-date P\&L  &  \Sexpr{duke[!is.na(pnl_mtd)][,max(date)]} \\
Year-to-date P\&L  &  \Sexpr{duke[!is.na(pnl_ytd)][,max(date)]} \\
Life-to-date P\&L  &  \Sexpr{duke[!is.na(pnl_ltd)][,max(date)]} \\
Rolling P\&L  &  \Sexpr{duke[!is.na(pnl_rolling)][,max(date)]} \\
Drawdown  &  \Sexpr{duke[!is.na(pnl_draw)][,max(date)]} \\
Gross  &  \Sexpr{duke[!is.na(gross)][,max(date)]} \\
Net  &  \Sexpr{duke[!is.na(net)][,max(date)]} \\
\end{tabular}
\end{center}

\vskip 5mm

\Sexpr{res1}

<<, cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
if(FALSE){
  if(exists("db"))dbDisconnect(db)
}
@

\end{document}
