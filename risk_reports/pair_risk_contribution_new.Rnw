\documentclass{article}



\usepackage[portrait, headheight = 0cm, margin=0.25cm, top = 0.25cm, nofoot]{geometry} 
\usepackage[export]{adjustbox} 
\usepackage{graphicx}
\usepackage[dvipsnames,table]{xcolor} % [dvipsnames,table] for setting colors \usepackage{amsmath} \usepackage{xfrac}
\usepackage{tikz}
\usetikzlibrary{shapes.geometric}
\usetikzlibrary{shapes.misc}
%\usetikzlibrary{external}
%\tikzexternalize % activate!
%\usepackage{sparklines}
\usepackage{xfrac}
\usepackage[space]{grffile}

\DeclareRobustCommand\Tstrut{\rule{0pt}{2.6ex}}         % = `top' strut
\DeclareRobustCommand\Bstrut{\rule[-0.9ex]{0pt}{0pt}}   % = `bottom' strut
\renewcommand{\familydefault}{\sfdefault}

\begin{document}

<<,cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
# this chunk is common to all child documents
require(Hmisc)
require(stringi)
require(digest)
require(scales)
require(data.table)
require(Matrix)
require(Matrix.utils)
require(clue)
require(magick)
require(readxl)
require(Rtsne)
require(knitr)
require(magrittr)
require(gsubfn)
require(FRAPO)
require(ggplot2)

config<-new.env()
source(
  file="https://raw.githubusercontent.com/satrapade/pairs/master/configuration/workflow_config.R",
  local=config
)
source("https://raw.githubusercontent.com/satrapade/pairs/master/utility/fetch_risk_report.R")
source("https://raw.githubusercontent.com/satrapade/pairs/master/utility/append2log.R")
source("https://raw.githubusercontent.com/satrapade/pairs/master/utility/log_code.R")
source("https://raw.githubusercontent.com/satrapade/utility/master/ticker_class.R")
source("https://raw.githubusercontent.com/satrapade/utility/master/scrub.R")

if(!exists("append2log"))knitr::knit_exit() 
if(!exists("log_code"))knitr::knit_exit() 

#append2log("pair_risk_contribution: start",append=TRUE)

source("https://raw.githubusercontent.com/satrapade/latex_utils/master/latex_helpers_v2.R")
source("https://raw.githubusercontent.com/satrapade/pairs/master/utility/volatility_trajectory.R")
source("https://raw.githubusercontent.com/satrapade/utility/master/nn_cast.R")

off_site<-if(Sys.info()["sysname"]=="Windows"){FALSE}else{TRUE}

bar_intervals<-readLines(
  if(off_site){
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/bar_intervals.csv"
  }else{
  "N:/Depts/Share/UK Alpha Team/Analytics/market_data/bar_intervals.csv"
  }
) %>% paste0(collapse="\n") %>% fread

intraday_perf<-readLines(
  if(off_site){
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/intraday_perf.csv"
  } else {
    "N:/Depts/Share/UK Alpha Team/Analytics/market_data/intraday_perf.csv"
  }
) %>% paste0(collapse="\n") %>% fread %>% {.[bar_intervals$day>0]} %>%
as.matrix

intraday_pair<-readLines(
  if(off_site){
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/intraday_pair.csv"
  } else {
    "N:/Depts/Share/UK Alpha Team/Analytics/market_data/intraday_pair.csv"
  }
) %>% paste0(collapse="\n") %>% fread %>%  {.[bar_intervals$day>0]} %>%
as.matrix


pair_pnl<-readLines(
  if(off_site){
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/duke_pair_local_pnl.csv"
  } else {
    "N:/Depts/Share/UK Alpha Team/Analytics/duke_summary/duke_pair_local_pnl.csv"
  }
) %>% paste0(collapse="\n") %>% fread

pair_pnl_matrix<-structure(
  do.call(cbind,pair_pnl[,-1,with=FALSE]),
  dimnames=list(pair_pnl$date,names(pair_pnl)[-1])
)

pair_long_pnl<-readLines(
  if(off_site){
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/duke_pair_long_pnl.csv"
  } else {
    "N:/Depts/Share/UK Alpha Team/Analytics/duke_summary/duke_pair_long_pnl.csv"
  }
) %>% paste0(collapse="\n") %>% fread

pair_long_pnl_matrix<-structure(
  do.call(cbind,pair_long_pnl[,-1,with=FALSE]),
  dimnames=list(pair_long_pnl$date,names(pair_long_pnl)[-1])
)

pair_short_pnl<-readLines(
  if(off_site){
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/duke_pair_short_pnl.csv"
  } else {
    "N:/Depts/Share/UK Alpha Team/Analytics/duke_summary/duke_pair_short_pnl.csv"
  }
) %>% paste0(collapse="\n") %>% fread

pair_short_pnl_matrix<-structure(
  do.call(cbind,pair_short_pnl[,-1,with=FALSE]),
  dimnames=list(pair_short_pnl$date,names(pair_short_pnl)[-1])
)

factor_tret<-readLines(
  if(off_site){
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/factor_local_tret.csv"
  } else {
    "N:/Depts/Share/UK Alpha Team/Analytics/market_data/factor_local_tret.csv"
  }
) %>% paste0(collapse="\n") %>% fread

portfolio_local_tret<-readLines(
  if(off_site){
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/portfolio_local_tret.csv"
  } else {
    "N:/Depts/Share/UK Alpha Team/Analytics/market_data/portfolio_local_tret.csv"
  }
) %>% paste0(collapse="\n") %>% fread

factor_tret_matrix<-structure(
  do.call(cbind,factor_tret[,-1,with=FALSE]),
  dimnames=list(factor_tret$date,names(factor_tret)[-1])
)%>%
{colnames(.)<-gsub("( Index)|( Equity)","",colnames(.));.}

duke_pair_look_vs_outright<-readLines(
  if(off_site){
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/duke_pair_look_vs_outright.csv"
  } else {
    "N:/Depts/Share/UK Alpha Team/Analytics/duke_summary/duke_pair_look_vs_outright.csv"
  }
) %>% paste0(collapse="\n") %>% fread




look_through_pair_exposure<-duke_pair_look_vs_outright[
  TRUE,
  .(
    Exposure=sum(Outright+LookThrough)
  ),
  keyby=c("Pair","SuperSectorIndex")
]

pair_lt_matrix<-NNcast(
  look_through_pair_exposure,
  i_name="Pair",
  j_name="gsub(' Index','',SuperSectorIndex)%>%{ifelse(.=='','Unknown',.)}",
  v_name="Exposure"
)%>%{.[,colnames(.)!="Unknown"]}

pair_ltlong_matrix<-NNcast(
  look_through_pair_exposure,
  i_name="Pair",
  j_name="gsub(' Index','',SuperSectorIndex)%>%{ifelse(.=='','Unknown',.)}",
  v_name="pmax(Exposure,0)"
)%>%{.[,colnames(.)!="Unknown"]}

pair_ltshort_matrix<-NNcast(
  look_through_pair_exposure,
  i_name="Pair",
  j_name="gsub(' Index','',SuperSectorIndex)%>%{ifelse(.=='','Unknown',.)}",
  v_name="pmax(-Exposure,0)"
)%>%{.[,colnames(.)!="Unknown"]}


intraday_sector<-grepl(
    paste0("(^",colnames(pair_lt_matrix),")",collapse = "|"),
    colnames(intraday_perf)
  ) %>% 
  {colnames(intraday_perf)[.]} %>%
  {intraday_perf[,.]} %>%
  {colnames(.)<-gsub(" Index","",colnames(.));.}

pair_exposure<- readLines(
  if(off_site){
    "https://raw.githubusercontent.com/satrapade/pairs/master/data/duke_pair_exposure.csv"
  } else {
    "N:/Depts/Share/UK Alpha Team/Analytics/duke_summary/duke_pair_exposure.csv"
  }
) %>% 
  paste0(collapse="\n") %>% 
  fread %>% 
  {names(.)<-gsub("date","ticker",names(.),fixed=TRUE);.} %>% # mislabeling 
  {melt(
      data=.,
      id.vars = "ticker", 
      measure.vars = names(.)[-1],
      variable.name="pair",
      value.name="exposure"
  )} %>% 
  {.$manager<-gsub("[0-9]+$","",.$pair); .} %>%
  {.[,.(manager,pair,ticker,exposure)]}

total_gross<-round(sum(abs(pair_exposure$exposure))*10000,digits=1)

gross_fraction <- pair_exposure[,.(gross=sum(abs(exposure))),keyby=pair] %>% 
  {setNames(.$gross,.$pair)} %>%
  {./sum(.)}

pair_weights<-total_gross*gross_fraction

pair_gross<-total_gross*gross_fraction

stopifnot(all(names(gross_fraction)==colnames(pair_pnl_matrix)))

pair_tret <- pair_pnl_matrix%*%diag(10000/(total_gross*gross_fraction)) %>%
{dimnames(.)<-dimnames(pair_pnl_matrix);.}


#
# display stuff
#

plt<-data.table(pair_lt_matrix[names(gross_fraction),])
for(i in names(plt)){
  attributes(plt[[i]])$format=quote(scol(n_fmt(round(this,digits=0)),this))
  attributes(plt[[i]])$hdr=tbl(c(
    gsub("^SX","",i),
    n_fmt(round(sum(plt[[i]]),digits=0))
  ),align="@{}l@{}")
}

pair_constituents<-pair_exposure[,.(
  ticker_max=gsub("( Equity)|( Index)|( [A-Z]{2})","",ticker[which.max(exposure)]),
  ticker_min=gsub("( Equity)|( Index)|( [A-Z]{2})","",ticker[which.min(exposure)]),
  ticker_most=gsub("( Equity)|( Index)|( [A-Z]{2})","",ticker[which.max(abs(exposure))]),
  stock_most=local({
    eq<-(ticker_class(ticker)=="equity|nomatch")
    ex<-ifelse(eq,exposure,0)
    gsub("( Equity)|( Index)|( [A-Z]{2})","",ticker[which.max(abs(ex))])
  })
),keyby=pair]

#
# pair_stats is the main pair stats table
#

log_code(pair_stats<-data.table(
  marginal_risk_contribution=structure(
    mrc(total_gross*gross_fraction,cov(pair_tret)),
    format=quote(n_fmt(round(this,digits=1))),
    hdr=tbl(c("MRC","risk","cntr","pct"),align="@{}l@{}")
)))
  
log_code(pair_stats$pair<-names(gross_fraction))


log_code(pair_stats$stock<-pair_constituents[names(gross_fraction),stock_most])

log_code(pair_stats$gross_fraction<-structure(
    100*gross_fraction,
    format=quote(round(this,digits=1)),
    hdr=tbl(c("GRS","pct","tot"),align="@{}l@{}")
))

log_code(pair_stats$gross<-structure(
    total_gross*gross_fraction,
    format=quote(round(this,digits=0)),
    hdr=tbl(c("ACT","gross","bps"),align="@{}l@{}")
))

log_code(pair_stats$rp_gross<-structure(
    apply(pair_tret,2,sd)%>%{mean(.)/.}%>%{total_gross*./sum(.)}, # risk parity
    format=quote(n_fmt(round(this,digits=0))),
    hdr=tbl(c("RP","gross","bps"),align="@{}l@{}")
))

log_code(pair_stats$volatility<-structure(
    apply(pair_pnl_matrix,2,sd)*10000,
    format=quote(round(this,digits=1)),
    hdr=tbl(c("Vol","daily","bps"),align="l")
))

log_code(pair_stats<-pair_stats[order(-marginal_risk_contribution)])

log_code(pair_stats$cum_marginal_risk<-pair_stats[
  TRUE,
  structure(
      cumsum(marginal_risk_contribution),
      format=quote(round(this,digits=1)),
      hdr=tbl(c("Cum","marg","risk","pct"),align="@{}l@{}") 
)])

log_code(pair_stats$volatility_trajectory<-pair_stats[
  TRUE,
  structure(
    volatility_trajectory_mrc(pair_tret,setNames(gross,pair)),
    format=quote(round(this,digits=2)),
    hdr=tbl(c("Vol","traj","marg","risk","seq"),align="@{}l@{}")
)])

log_code(pair_stats<-data.table(pair_stats,plt[match(pair,rownames(pair_lt_matrix))]))

log_code(pair_stats$corr_day<-pair_stats[
  TRUE,
  structure(
    100*mapply(
      cor,
      data.table(pair_tret[,pair]),
      data.table(factor_tret_matrix[,colnames(pair_lt_matrix)]%*%t(pair_lt_matrix[pair,]))
    ),
    format=quote(s1col(n_fmt(round(this,digits=0)),this,50)),
    hdr=tbl(c("COR","2","yr","daily"),align="@{}l@{}") 
 )
])

log_code(pair_stats$corr_10min<-pair_stats[
  TRUE,
  structure(
    100*mapply(
      cor,
      data.table(intraday_pair[,pair]),
      data.table(intraday_sector[,colnames(pair_lt_matrix)]%*%t(pair_lt_matrix[pair,]))
    ),
    format=quote(s1col(n_fmt(round(this,digits=0)),this,50)),
    hdr=tbl(c("COR","2","wk","10min"),align="@{}l@{}") 
 )
])

  
s1col<-function(t,s,th=50){
  r1<-ifelse(s>(+th),paste0("\\textcolor{red}{\\bf ",t,"}"),"")
  r2<-ifelse(s<=th,t,"")
  paste0(r1,r2)
}

scol<-function(t,s,th=50){
  r1<-ifelse(s<(-th),paste0("\\textcolor{red}{\\bf ",t,"}"),"")
  r2<-ifelse(s>(+th),paste0("\\textcolor{black}{\\bf ",t,"}"),"")
  r3<-ifelse(abs(s)<=th,t,"")
  paste0(r1,r2,r3)
}

latex_pair_stats<-ntable(
  df=pair_stats,
  scale="0.50",
  add_rownames=TRUE
)

log_code(chk1<-class(latex_pair_stats))

@

\section{Pair risk contribution}

\begin{center}
\Sexpr{latex_pair_stats}
\end{center}



<<,cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
lt_tret_matrix<-factor_tret_matrix[,colnames(pair_lt_matrix)]
pair_mrc<--sort(setNames(-mrc(pair_gross,cov(pair_tret)),colnames(pair_tret)))

all_contributions<-list(
  DUKE50=which(cumsum(pair_mrc)<=50),
  DUKE75=which(cumsum(pair_mrc)<=75),
  DUKE90=which(cumsum(pair_mrc)<=90),
  DUKE10=which(cumsum(pair_mrc)>90),
  "DUKE\\_ALL"=cumsum(pair_mrc*0+1)
) %>%
{mapply(function(n)paste(paste0("(",names(pair_mrc)[n],")"),collapse="|"),.)} 

all_managers<-colnames(pair_pnl_matrix) %>%
  { gsub("[0-9]+$","",.) } %>%
  unique %>%
  sort %>%
  {setNames(paste0("^",.),.)} %>%
  {c(.,ALL="*")}

all_sectors<-duke_pair_look_vs_outright[abs(Outright)>0,.(
  gross=sum(abs(Outright))
),keyby=list(
  pair=Pair,
  sector=gsub(" Index","",SuperSectorIndex)%>%{ifelse(.=="","NONE",.)}
)] %>%
 {mapply(
   function(the_sector).[sector==the_sector,sort(unique(pair))],
   the_sector=gsub(" Index","",sort(unique(.$sector))),
   SIMPLIFY=FALSE
 )} %>%
{mapply(function(n)paste(paste0("(",n,")"),collapse="|"),.)} 


all_subsets<-colnames(pair_pnl_matrix) %>%
  { gsub("[0-9]+$","",.) } %>%
  unique %>%
  sort %>%
  {setNames(paste0("^",.),.)} %>%
  {c(.,ALL="*")}

pair2subset<-function(all_subsets)mapply(
  . %>%
    {setNames(grepl(.,colnames(pair_pnl_matrix)),colnames(pair_pnl_matrix))},
  all_subsets
)

#      
safe_cor<-function(x,y)if(any(mapply(sd,list(x,y))<1e-10)){"-"}else{
  paste0(round(100*cor(x,y),digits=0))
}

# actual all, long, short P&Ls
subset_pnl<-function(all_subsets)pair_pnl_matrix%*%pair2subset(all_subsets) 
subset_long_pnl<-function(all_subsets)pair_long_pnl_matrix%*%pair2subset(all_subsets) 
subset_short_pnl<-function(all_subsets)pair_short_pnl_matrix%*%pair2subset(all_subsets) 

# look-through all, long, short P&Ls
subset_lt_pnl<-function(all_subsets)lt_tret_matrix%*%(t(pair_lt_matrix)%*%pair2subset(all_subsets))
subset_ltlong_pnl<-function(all_subsets)lt_tret_matrix%*%(t(pair_ltlong_matrix)%*%pair2subset(all_subsets))
subset_ltshort_pnl<-function(all_subsets)lt_tret_matrix%*%(t(pair_ltshort_matrix)%*%pair2subset(all_subsets))

# correlations 

cor_long_vs_short <- function(s){
  subset_matrix<-pair2subset(s)
  long_pnl<-pair_long_pnl_matrix%*%subset_matrix
  short_pnl<-pair_short_pnl_matrix%*%subset_matrix
  cm<-try(cor(long_pnl,short_pnl),silent=TRUE)
  diag(cm)
}

cor_all_vs_LT_all <- function(s){
  subset_matrix<-pair2subset(s)
  lt_matrix<-t(pair_lt_matrix) %*% subset_matrix
  pnl<-pair_pnl_matrix%*%subset_matrix
  lt_pnl<-lt_tret_matrix%*%lt_matrix
  cm<-try(cor(pnl,lt_pnl),silent=TRUE)
  diag(cm)
}

cor_long_vs_LT_long <- . %>% 
{mapply(safe_cor,data.table(subset_long_pnl(.)),data.table(subset_ltlong_pnl(.)))}

cor_short_vs_LT_short <- . %>% 
{mapply(safe_cor,data.table(subset_short_pnl(.)),data.table(subset_ltshort_pnl(.)))}



subset_exposure_df<-function(all_subsets)duke_pair_look_vs_outright[
  TRUE,
  list(
    super_sector=structure(
      SuperSector[1],
      format=quote(abbreviate(ifelse(this=="","None",latexTranslate(this)),8)),
      hdr=tbl(c("Sector"),align="@{}l@{}")
    )
  )%>%c(setNames(mapply(function(subset_name,subset,direction){
        dir<-if(direction=="Long"){+1}else{-1}
        include_pair=grepl(subset,Pair)
        structure(
          sum(pmax(dir*Outright[include_pair],0)+pmax(dir*LookThrough[include_pair],0)),
          format=quote(comma(this,digits=0)),
          hdr=tbl(c(subset_name,direction,"{\\tiny OR+LT}"),align="@{}l@{}")
        )
      },
      subset_name=rep(names(all_subsets),each=2),
      subset=rep(all_subsets,each=2),
      direction=rep(c("Long","Short"),times=length(all_subsets)),
      SIMPLIFY=FALSE
    ),
    paste0(rep(names(all_subsets),each=2),"_",rep(c("long","short"),times=length(all_subsets)))
  )),
  keyby=list(super_sector_index=structure(
    gsub(" Index$","",SuperSectorIndex),
    hdr=tbl(c("Sector","Index"),align="@{}l@{}")
  ))
]


#
# look through vs actual correlations for long and short leg
#




subset_fn<-list(
  sum_risk_contribution = . %>% pair2subset %>% 
    {setNames(mrc(pair_gross,cov(pair_tret)),rownames(.)) %*% .} %>%
    drop %>% round(digits=1),
  gross_fraction =.%>% {drop((100*pair_gross/total_gross)%*%pair2subset(.))} %>% 
    {setNames(comma(.,digits=0),names(.))},
  sum_gross =.%>% {drop(pair_gross%*%pair2subset(.))} %>% {setNames(comma(.,digits=0),names(.))},
  count_pair= . %>% pair2subset %>% colSums,
  count_pm=function(all_subsets)mapply(
    function(p){
      ndx<-duke_pair_look_vs_outright[TRUE,grepl(p,Pair)&abs(Outright)>0]
      pairs<-duke_pair_look_vs_outright[ndx,Pair]
      length(unique(gsub("[0-9]+$","",pairs)))
    },
    all_subsets
  ),
  count_ticker=function(all_subsets)mapply(
    function(p){
      ndx<-duke_pair_look_vs_outright[TRUE,grepl(p,Pair)&abs(Outright)>0]
      tickers<-duke_pair_look_vs_outright[ndx,Ticker]
      length(unique(tickers))
    },
    all_subsets
  ),
  count_long_ticker=function(all_subsets)mapply(
    function(p){
      ndx<-duke_pair_look_vs_outright[TRUE,grepl(p,Pair) & Outright>0]
      tickers<-duke_pair_look_vs_outright[ndx,Ticker]
      length(unique(tickers))
    },
    all_subsets
  ),
  count_short_ticker=function(all_subsets)mapply(
    function(p){
      ndx<-duke_pair_look_vs_outright[TRUE,grepl(p,Pair) & Outright<0]
      tickers<-duke_pair_look_vs_outright[ndx,Ticker]
      length(unique(tickers))
    },
    all_subsets
  ),
  cor_long_vs_short =.%>% {mapply(safe_cor,data.table(subset_long_pnl(.)),data.table(subset_short_pnl(.)))},
  cor_all_vs_LT_all =.%>% {mapply(safe_cor,data.table(subset_pnl(.)),data.table(subset_lt_pnl(.)))},
  cor_long_vs_LT_long =.%>% {mapply(safe_cor,data.table(subset_long_pnl(.)),data.table(subset_ltlong_pnl(.)))},
  cor_short_vs_LT_short =.%>% {mapply(safe_cor,data.table(subset_short_pnl(.)),data.table(subset_ltshort_pnl(.)))}
)

# Reduce(function(a,b)b(a),functions(lt_cor_fn[[1]])[1:2],init=all_subsets)

mapply(do.call,what=subset_fn,MoreArgs = list(args=list(all_subsets)),SIMPLIFY = TRUE)

make_subset_stats<- function(all_subsets){
  res<-t(mapply(do.call,what=subset_fn,MoreArgs = list(args=list(all_subsets))))
  res1<-data.table(
    calculation=structure(rownames(res),format=quote(latexTranslate(this))),
    res,
    check.names=TRUE
  )
  res1
}
excl<-function(subset,excl_names)subset[!grepl(excl_names,names(subset))]

@
\newpage
\section{Exposure: ``single manager'', ``top risk contribution'' and ``containing position in sector'' subsets}

\vskip 5mm
We select the largest pair subsets having a single manager:
\vskip 5mm

\begin{center}
\Sexpr{ntable(
  df=subset_exposure_df(all_managers),
  scale="0.75",
  add_rownames=FALSE,
  align=c(rep(c("|l","l"),times=length(all_managers)),c("|l","l|")),
  halign=c(rep(c("l","l"),times=length(all_managers)),c("l","l")),
  title="``single manager'' subsets: sector exposures"
)}
\end{center}

\vskip 5mm
\noindent We identify the smallest pair subsets with marginal risk contributions of 50, 75 and 90 percent. 
We also select the largest pair subset covering 10 percent of total risk:
\vskip 5mm

\begin{center}
\Sexpr{ntable(
  df=subset_exposure_df(all_contributions),
  scale="0.75",
  add_rownames=FALSE,
  align=c(rep(c("|l","l"),times=length(all_contributions)),c("|l","l|")),
  halign=c(rep(c("l","l"),times=length(all_contributions)),c("l","l")),
  title="``top risk contribution'' subsets: sector exposures"
)}
\end{center}

<<,cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
all_subsets<-c(excl(c(all_managers,all_contributions),"ALL$"),ALL="*")
ss1<- all_subsets %>%
  make_subset_stats %>%
  {.[,.SD,keyby=calculation]} # subset stats

@
\vskip 5mm
\noindent DUKE90 has {\bf \Sexpr{ss1["gross_fraction",DUKE90]}} percent of gross, and contributes 
{\bf \Sexpr{ss1["sum_risk_contribution",DUKE90]}} percent of risk. DUKE10, on the other hand, accounts for 
{\bf \Sexpr{ss1["gross_fraction",DUKE10]}} percent of gross while contributing only 
{\bf \Sexpr{ss1["sum_risk_contribution",DUKE10]}} percent of risk. Further characteristics of selected pair subsets:
\vskip 5mm

\begin{center}
\Sexpr{ntable(
  df=make_subset_stats(all_subsets),
  scale="0.75",
  add_rownames=FALSE,
  align="l",
  halign="c",
  title="``single manager'', ``top contribution'' subsets: portfolio statistics"
)}
\end{center}

\newpage

\vskip 5mm
We select the largest pair subsets having outright positions in each sector:
\vskip 5mm

\begin{center}
\Sexpr{ntable(
  df=subset_exposure_df(head(all_sectors,length(all_sectors)/2)),
  scale="0.7",
  add_rownames=FALSE,
  align=c(rep(c("|l","l"),times=length(all_managers)),c("|l","l|")),
  halign=c(rep(c("l","l"),times=length(all_managers)),c("l","l")),
  title="``containing position in sector'' subsets: sector exposures"
)}
\end{center}

\vskip 5mm 

\begin{center}
\Sexpr{ntable(
  df=subset_exposure_df(tail(all_sectors,length(all_sectors)/2)),
  scale="0.7",
  add_rownames=FALSE,
  align=c(rep(c("|l","l"),times=length(all_managers)),c("|l","l|")),
  halign=c(rep(c("l","l"),times=length(all_managers)),c("l","l")),
  title="``containing position in sector'' subsets: sector exposures"
)}
\end{center}

\vskip 5mm 

\begin{center}
\Sexpr{ntable(
  df=make_subset_stats(all_sectors),
  scale="0.7",
  add_rownames=FALSE,
  align="l",
  halign="c",
  title="``containing position in sector'' subsets: portfolio statistics"
)}
\end{center}


\newpage
\section{Pair correlation}
<<,cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
pair_mrc<--sort(setNames(-mrc(pair_gross,cov(pair_tret)),colnames(pair_tret)))

pair_subsets <- c(length(pair_mrc),30,10) %>%
  setNames(paste0("DUKE",.))

pair_correls<-mapply(function(n){
  ndx<-names(pair_mrc)[1:n]
  tret<-pair_tret[,ndx,drop=FALSE]
  cm<-100*cor(tret)%>%
  {.[which(row(.)!=col(.),arr.ind = TRUE)]}
  cm
},
n=pair_subsets,
SIMPLIFY=FALSE
)

subset_stats<-data.table(
  subset=structure(
    names(pair_subsets),
    hdr=tbl(c("Subset","name"),align="@{}l@{}")
  ),
  pairs=structure(
    pair_subsets,
    hdr=tbl(c("Pair","count"),align="@{}l@{}")
  ),
  correlations=structure(
    mapply(length,pair_correls),
    format=quote(round(this,digits=1)),
    hdr=tbl(c("Correlation","count"),align="@{}l@{}")
  ),
  mean=structure(
    mapply(mean,pair_correls),
    format=quote(round(this,digits=1)),
    hdr=tbl(c("Mean","subset","correlation"),align="@{}l@{}")
  ),
  mrc=structure(
    mapply(function(n)sum(pair_mrc[1:n]),pair_subsets),
    format=quote(round(this,digits=1)),
    hdr=tbl(c("Sum","subset","risk","contribution","fraction"),align="@{}l@{}")
  ),
  gross=structure(
    mapply(function(n)sum(pair_gross[names(pair_mrc)[1:n]]),pair_subsets),
    format=quote(comma(this,digits=0)),
    hdr=tbl(c("Sum","subset","gross"),align="@{}l@{}")
  ),
  gross_fraction=structure(
    mapply(function(n)sum(pair_gross[names(pair_mrc)[1:n]]),pair_subsets),
    format=quote(round(100*this/total_gross,digits=0)),
    hdr=tbl(c("Sum","subset","gross","fraction"),align="@{}l@{}")
  )
)[,.SD,keyby=subset]

g1<-rbind(
    data.table(subset=subset_stats$subset[1],value=pair_correls[[subset_stats$subset[1]]]),
    data.table(subset=subset_stats$subset[2],value=pair_correls[[subset_stats$subset[2]]]),
    data.table(subset=subset_stats$subset[3],value=pair_correls[[subset_stats$subset[3]]])
) %>% ggplot() +
xlim(
    quantile(do.call(c,pair_correls),0.01),
    quantile(do.call(c,pair_correls),0.99)
) +
geom_histogram(
  aes(x=value,y = stat(ndensity),fill=subset,group=subset),
  position="identity",
  breaks=seq(
    quantile(do.call(c,pair_correls),0.01),
    quantile(do.call(c,pair_correls),0.99), 
    length.out=25
  ),
  alpha=0.66
)+
labs(title="Histogram of pair-to-pair correlations for selected subsets") +
labs(x="Correlation", y="Density") 


@

\vskip 5mm

\begin{center}
\Sexpr{ntable(
  df=subset_stats[TRUE,.(subset,pairs,correlations,mean,gross,gross_fraction,mrc)]
)}
\end{center}

\vskip 5mm

\begin{center}
\Sexpr{make_plot(
  plot(g1),
  width="20cm",
  height="20cm",
  envir=environment()
)}
\end{center}



<<,cache=FALSE, eval=TRUE, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
pair_gross<-total_gross*gross_fraction
pair_sd<-apply(pair_tret%*%diag(pair_gross),2,sd)

tri<-function(n,d=1,s=1)(s*row(diag(n))<s*col(diag(n)))+d*diag(n)
volatility_trajectory<-function(
  returns,
  ptf
){
  N<-length(ptf)
  stocks<-names(ptf)
  NAV<-sum(ptf)
  ptf_tret<-returns[,names(ptf)]
  ptf_vol<-apply(ptf_tret,2,sd)
  vol<-ptf*ptf_vol 
  vol_rank=rank(-vol,ties.method="first")
  weight_matrix <- cbind(ptf)[,rep(1,N)]
  mask_matrix <- diag(N)[vol_rank,] %*% tri(N) %>% # the key step
  {dimnames(.)<-list(stocks,seq(stocks));.}
  trajectory_matrix <- mask_matrix * weight_matrix 
  normalized_trajectory_matrix <- trajectory_matrix %>%
  get("%*%")(diag(NAV/colSums(trajectory_matrix)))
  bsk<- ptf_tret%*%normalized_trajectory_matrix %>% apply(2,sd)
  bsk1<-colSums(rbind(ptf_vol)%*%normalized_trajectory_matrix)
  res<-data.table(
    rank=seq_along(bsk),
    bsk=bsk,
    bsk1=bsk1,
    weights=normalized_trajectory_matrix %>% 
      split(col(.)) %>%
      lapply(.%>%setNames(stocks)) %>%
      lapply(.%>%{.[abs(.)>0]})
  )
  res
}

vt<-volatility_trajectory(pair_tret,pair_gross)

traj_df<-function(n=5)data.table(
  step=rep(seq_along(vt$weights[1:n]),mapply(length,vt$weights[1:n])),
  do.call(c,vt$weights[1:n])%>%{data.table(pair=names(.),gross=.)}
) %>% 
  {NNcast(
    .,
    i_name="stri_pad_left(step,3,'0')",
    j_name="pair",
    v_name="gross"
  )[,names(vt$weights[[n]])]} %>%
  {cbind(.[,order(-colSums(.>0))],total=rowSums(.))} %>%
  comma(digits=0) %>%
  {data.table(
    step=1:n,
    bsk=round(vt$bsk[1:n],digits=1),
    bsk1=round(vt$bsk1[1:n],digits=1),
    benefit=round(vt$bsk1[1:n]-vt$bsk[1:n],digits=1),
    .
  )}

@
\newpage
\section{Pair diversification}

\vskip 5mm
This plot illustrates the impact of diversification on DUKE's daily volatility. The
difference between {\bf average constituent volatility} and {\bf basket volatility} 
is the {\bf diversification benefit}. The plot shows how this changes as we increase
the count of pairs in the portfolio.

\vskip 5mm

\begin{description}
\item[BSK] basket volatility
\item[BSK1] gross-weighted average constituent volatility
\end{description}

\vskip 5mm

\begin{center}
\Sexpr{make_plot(
  plot(
  vt %>%
  melt(id.vars="rank",measure.vars=c("bsk","bsk1")) %>%
  ggplot()+
  geom_line(aes(y=value,x=rank,col=variable))+
  ylab("Daily volatility in basis points")+
  xlab(paste0(
    "Add pairs ranking up to X axis tick on realized volatility,\n",
    "then normalize gross to DUKE total and compute daily volatility\n",
    "of the resulting pair basket, repeat until all pairs are included.\n",
    "Leftmost point has 1 pair, rightmost has all of them"
  ))+
  ggtitle(paste0(
    "DUKE volatility trajectory, daily basis points,\n",
    "for diversified and de-diversified basket"
  ))),
  width="15cm",
  height="15cm",
  envir=environment()
)}
\end{center}

\vskip 5mm

\begin{center}
\Sexpr{ntable(
  df=traj_df(25),
  scale="0.5",
  add_rownames=FALSE,
  title="Trajectory detail : first 25 points of volatility trajectory"
)}
\end{center}

\end{document}
